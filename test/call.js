var passed = 0;
var failed = 0;
var quiet = false;

testModule0();
end();

function testModule0() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,  75,  15,  64,
      0,   1,   1,  64,   0,   1,   2,  64,   0,   1,   3,  64,   0,   1,   4,  64,
      1,   1,   1,   1,  64,   1,   2,   1,   2,  64,   1,   3,   1,   3,  64,   1,
      4,   1,   4,  64,   2,   3,   1,   1,   1,  64,   2,   1,   2,   1,   2,  64,
      2,   4,   3,   1,   3,  64,   2,   2,   4,   1,   4,  64,   2,   2,   2,   1,
      2,  64,   1,   2,   1,   1,  64,   0,   0,   8, 102, 117, 110,  99, 116, 105,
    111, 110,  68,  67,   0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,
      0,   1,   2,   3,   0,   1,   2,   3,   0,   1,   2,   3,   5,  12,   5,  13,
     13,  14,  14,  14,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,  14,  14,   6, 101, 120, 112, 111, 114, 116, 239,   6,
     54,  12,   8, 116, 121, 112, 101,  45, 105,  51,  50,  13,   8, 116, 121, 112,
    101,  45, 105,  54,  52,  14,   8, 116, 121, 112, 101,  45, 102,  51,  50,  15,
      8, 116, 121, 112, 101,  45, 102,  54,  52,  16,  14, 116, 121, 112, 101,  45,
    102, 105, 114, 115, 116,  45, 105,  51,  50,  17,  14, 116, 121, 112, 101,  45,
    102, 105, 114, 115, 116,  45, 105,  54,  52,  18,  14, 116, 121, 112, 101,  45,
    102, 105, 114, 115, 116,  45, 102,  51,  50,  19,  14, 116, 121, 112, 101,  45,
    102, 105, 114, 115, 116,  45, 102,  54,  52,  20,  15, 116, 121, 112, 101,  45,
    115, 101,  99, 111, 110, 100,  45, 105,  51,  50,  21,  15, 116, 121, 112, 101,
     45, 115, 101,  99, 111, 110, 100,  45, 105,  54,  52,  22,  15, 116, 121, 112,
    101,  45, 115, 101,  99, 111, 110, 100,  45, 102,  51,  50,  23,  15, 116, 121,
    112, 101,  45, 115, 101,  99, 111, 110, 100,  45, 102,  54,  52,  24,   3, 102,
     97,  99,  25,   7, 102,  97,  99,  45,  97,  99,  99,  26,   3, 102, 105,  98,
     27,   4, 101, 118, 101, 110,  28,   3, 111, 100, 100,  29,   7, 114, 117, 110,
     97, 119,  97, 121,  30,  14, 109, 117, 116, 117,  97, 108,  45, 114, 117, 110,
     97, 119,  97, 121,  32,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101,
    116, 117, 114, 110,  95,  48,  33,  16,  36,  97, 115, 115, 101, 114, 116,  95,
    114, 101, 116, 117, 114, 110,  95,  49,  34,  16,  36,  97, 115, 115, 101, 114,
    116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  35,  16,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  51,  36,  16,  36,  97,
    115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  52,  37,  16,
     36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  53,
     38,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,
     95,  54,  39,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117,
    114, 110,  95,  55,  40,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101,
    116, 117, 114, 110,  95,  56,  41,  16,  36,  97, 115, 115, 101, 114, 116,  95,
    114, 101, 116, 117, 114, 110,  95,  57,  42,  17,  36,  97, 115, 115, 101, 114,
    116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  48,  43,  17,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  49,  44,  17,
     36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,
     50,  45,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  49,  51,  46,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101,
    116, 117, 114, 110,  95,  49,  52,  47,  17,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  49,  53,  48,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  54,  49,  17,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  55,
     50,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,
     95,  49,  56,  51,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  49,  57,  52,  17,  36,  97, 115, 115, 101, 114, 116,  95,
    114, 101, 116, 117, 114, 110,  95,  50,  48,  53,  17,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  49,  54,  17,  36,  97,
    115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  50,  55,
     17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     50,  51,  56,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117,
    114, 110,  95,  50,  52,  57,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  50,  53,  58,  17,  36,  97, 115, 115, 101, 114,
    116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  54,  59,  17,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  55,  60,  17,
     36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,
     56,  61,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  50,  57,  62,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101,
    116, 117, 114, 110,  95,  51,  48,  63,  17,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  51,  49,  64,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  51,  50,  65,  15,  36,
     97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,  51,  51,  66,  15,
     36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,  51,  52,   4,
     99, 111, 100, 101, 191,   5,  67,   4,   0,  16, 178,   2,   4,   0,  17, 228,
      2,   6,   0,  19,   0,  32, 115,  69,  10,   0,  18,   0,   0,   0,   0,   0,
    200, 174,  64,   3,   0,  20,   0,   3,   0,  20,   0,   3,   0,  20,   0,   3,
      0,  20,   0,   3,   0,  20,   1,   3,   0,  20,   1,   3,   0,  20,   1,   3,
      0,  20,   1,   4,   0,  22,   0,   0,   4,   0,  22,   0,   1,   4,   0,  22,
      0,   2,   4,   0,  22,   0,   3,   6,   0,  16,  32,  22,   1,   4,   7,   0,
     17, 192,   0,  22,   1,   5,   9,   0,  19, 195, 245, 168,  63,  22,   1,   6,
     13,   0,  18,  61,  10, 215, 163, 112,  61, 250,  63,  22,   1,   7,  11,   0,
     19, 102, 102,   0,  66,  16,  32,  22,   2,   8,   9,   0,  16,  32,  17, 192,
      0,  22,   2,   9,  18,   0,  18,   0,   0,   0,   0,   0,   0,  80,  64,  19,
      0,   0,   0,  66,  22,   2,  10,  16,   0,  17, 192,   0,  18, 102, 102, 102,
    102, 102,   6,  80,  64,  22,   2,  11,  20,   0,  20,   0, 186,   3,  17,   1,
      4,  20,   0,  20,   0,  17,   1,  92,  22,   1,  24,  93,  15,  22,   0,  20,
      0, 186,   3,  20,   1,   4,  20,   0,  17,   1,  92,  20,   0,  20,   1,  93,
     22,   2,  25,  15,  28,   0,  20,   0,  17,   1, 109,   3,  17,   1,   4,  20,
      0,  17,   2,  92,  22,   1,  26,  20,   0,  17,   1,  92,  22,   1,  26,  91,
     15,  17,   0,  20,   0, 186,   3,  16,  44,   4,  20,   0,  17,   1,  92,  22,
      1,  28,  15,  18,   0,  20,   0, 186,   3,  16, 227,   0,   4,  20,   0,  17,
      1,  92,  22,   1,  27,  15,   4,   0,  22,   0,  29,   4,   0,  22,   0,  31,
      4,   0,  22,   0,  30,   8,   0,  22,   0,  12,  16, 178,   2,  77,   8,   0,
     22,   0,  13,  17, 228,   2, 104,  12,   0,  22,   0,  14, 180,  19,   0,  32,
    115,  69, 180,  77,  16,   0,  22,   0,  15, 181,  18,   0,   0,   0,   0,   0,
    200, 174,  64, 181, 104,   7,   0,  22,   0,  16,  16,  32,  77,   8,   0,  22,
      0,  17,  17, 192,   0, 104,  12,   0,  22,   0,  18, 180,  19, 195, 245, 168,
     63, 180,  77,  16,   0,  22,   0,  19, 181,  18,  61,  10, 215, 163, 112,  61,
    250,  63, 181, 104,   7,   0,  22,   0,  20,  16,  32,  77,   8,   0,  22,   0,
     21,  17, 192,   0, 104,  12,   0,  22,   0,  22, 180,  19,   0,   0,   0,  66,
    180,  77,  16,   0,  22,   0,  23, 181,  18, 102, 102, 102, 102, 102,   6,  80,
     64, 181, 104,   9,   0,  17,   0,  22,   1,  24,  17,   1, 104,   9,   0,  17,
      1,  22,   1,  24,  17,   1, 104,  10,   0,  17,   5,  22,   1,  24,  17, 248,
      0, 104,  18,   0,  17,  25,  22,   1,  24,  17, 128, 128, 128, 222, 135, 146,
    236, 207, 225,   0, 104,  11,   0,  17,   0,  17,   1,  22,   2,  25,  17,   1,
    104,  11,   0,  17,   1,  17,   1,  22,   2,  25,  17,   1, 104,  12,   0,  17,
      5,  17,   1,  22,   2,  25,  17, 248,   0, 104,  20,   0,  17,  25,  17,   1,
     22,   2,  25,  17, 128, 128, 128, 222, 135, 146, 236, 207, 225,   0, 104,   9,
      0,  17,   0,  22,   1,  26,  17,   1, 104,   9,   0,  17,   1,  22,   1,  26,
     17,   1, 104,   9,   0,  17,   2,  22,   1,  26,  17,   2, 104,   9,   0,  17,
      5,  22,   1,  26,  17,   8, 104,  11,   0,  17,  20,  22,   1,  26,  17, 194,
    213,   0, 104,   9,   0,  17,   0,  22,   1,  27,  16,  44,  77,  10,   0,  17,
      1,  22,   1,  27,  16, 227,   0,  77,  10,   0,  17, 228,   0,  22,   1,  27,
     16,  44,  77,  11,   0,  17, 205,   0,  22,   1,  27,  16, 227,   0,  77,  10,
      0,  17,   0,  22,   1,  28,  16, 227,   0,  77,   9,   0,  17,   1,  22,   1,
     28,  16,  44,  77,  11,   0,  17, 200,   1,  22,   1,  28,  16, 227,   0,  77,
     10,   0,  17, 205,   0,  22,   1,  28,  16,  44,  77,   4,   0,  22,   0,  29,
      4,   0,  22,   0,  30,
  ]);

  assertReturn(module, '$assert_return_0', 'external/testsuite/call.wast', 102);
  assertReturn(module, '$assert_return_1', 'external/testsuite/call.wast', 103);
  assertReturn(module, '$assert_return_2', 'external/testsuite/call.wast', 104);
  assertReturn(module, '$assert_return_3', 'external/testsuite/call.wast', 105);
  assertReturn(module, '$assert_return_4', 'external/testsuite/call.wast', 107);
  assertReturn(module, '$assert_return_5', 'external/testsuite/call.wast', 108);
  assertReturn(module, '$assert_return_6', 'external/testsuite/call.wast', 109);
  assertReturn(module, '$assert_return_7', 'external/testsuite/call.wast', 110);
  assertReturn(module, '$assert_return_8', 'external/testsuite/call.wast', 112);
  assertReturn(module, '$assert_return_9', 'external/testsuite/call.wast', 113);
  assertReturn(module, '$assert_return_10', 'external/testsuite/call.wast', 114);
  assertReturn(module, '$assert_return_11', 'external/testsuite/call.wast', 115);
  assertReturn(module, '$assert_return_12', 'external/testsuite/call.wast', 117);
  assertReturn(module, '$assert_return_13', 'external/testsuite/call.wast', 118);
  assertReturn(module, '$assert_return_14', 'external/testsuite/call.wast', 119);
  assertReturn(module, '$assert_return_15', 'external/testsuite/call.wast', 120);
  assertReturn(module, '$assert_return_16', 'external/testsuite/call.wast', 121);
  assertReturn(module, '$assert_return_17', 'external/testsuite/call.wast', 122);
  assertReturn(module, '$assert_return_18', 'external/testsuite/call.wast', 123);
  assertReturn(module, '$assert_return_19', 'external/testsuite/call.wast', 125);
  assertReturn(module, '$assert_return_20', 'external/testsuite/call.wast', 129);
  assertReturn(module, '$assert_return_21', 'external/testsuite/call.wast', 130);
  assertReturn(module, '$assert_return_22', 'external/testsuite/call.wast', 131);
  assertReturn(module, '$assert_return_23', 'external/testsuite/call.wast', 132);
  assertReturn(module, '$assert_return_24', 'external/testsuite/call.wast', 133);
  assertReturn(module, '$assert_return_25', 'external/testsuite/call.wast', 135);
  assertReturn(module, '$assert_return_26', 'external/testsuite/call.wast', 136);
  assertReturn(module, '$assert_return_27', 'external/testsuite/call.wast', 137);
  assertReturn(module, '$assert_return_28', 'external/testsuite/call.wast', 138);
  assertReturn(module, '$assert_return_29', 'external/testsuite/call.wast', 139);
  assertReturn(module, '$assert_return_30', 'external/testsuite/call.wast', 140);
  assertReturn(module, '$assert_return_31', 'external/testsuite/call.wast', 141);
  assertReturn(module, '$assert_return_32', 'external/testsuite/call.wast', 142);
  assertTrap(module, '$assert_trap_33', 'external/testsuite/call.wast', 144);
  assertTrap(module, '$assert_trap_34', 'external/testsuite/call.wast', 145);
}

function createModule(data) {
  var u8a = new Uint8Array(data);
  var ffi = {spectest: {print: print}};
  return Wasm.instantiateModule(u8a, ffi);
}

function assertReturn(module, name, file, line) {
  try {
    var result = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (result == 1) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed.");
    failed++;
  }
}

function assertTrap(module, name, file, line) {
  var threw = false;
  try {
    module.exports[name]();
  } catch (e) {
    threw = true;
  }

  if (threw) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed, didn't throw");
    failed++;
  }
}

function invoke(module, name) {
  try {
    var invokeResult = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (!quiet)
    print(name + " = " + invokeResult);
}

function end() {
  if ((failed > 0) || !quiet)
    print(passed + "/" + (passed + failed) + " tests passed.");
}
