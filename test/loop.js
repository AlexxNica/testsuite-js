'use strict';

let spectest = {
  print: print || ((...xs) => console.log(...xs)),
  global: 666,
  table: new WebAssembly.Table({initial: 10, maximum: 20, element: 'anyfunc'}),  memory: new WebAssembly.Memory({initial: 1, maximum: 2}),};

let registry = {spectest};
let $$;

function register(name, instance) {
  registry[name] = instance.exports;
}

function module(bytes) {
  let buffer = new ArrayBuffer(bytes.length);
  let view = new Uint8Array(buffer);
  for (let i = 0; i < bytes.length; ++i) {
    view[i] = bytes.charCodeAt(i);
  }
  return new WebAssembly.Module(buffer);
}

function instance(bytes, imports = registry) {
  return new WebAssembly.Instance(module(bytes), imports);
}

function assert_malformed(bytes) {
  try { module(bytes) } catch (e) { return }
  throw new Error("Wasm decoding failure expected");
}

function assert_invalid(bytes) {
  try { module(bytes) } catch (e) { return }
  throw new Error("Wasm validation failure expected");
}

function assert_unlinkable(bytes) {
  let mod = module(bytes);
  try { new WebAssembly.Instance(mod, registry) } catch (e) { return }
  throw new Error("Wasm linking failure expected");
}

function assert_trap(action) {
  try { action() } catch (e) { return }
  throw new Error("Wasm trap expected");
}

function assert_return(action, expected) {
  let actual = action();
  if (actual !== expected) {
    throw new Error("Wasm return value " + expected + " expected, got " + actual);
  };
}

function assert_return_nan(action) {
  let actual = action();
  if (!Number.isNaN(actual)) {
    throw new Error("Wasm return value NaN expected, got " + actual);
  };
}

$$ = instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x40\x00\x00\x40\x00\x01\x01\x40\x01\x02\x01\x02\x40\x02\x03\x03\x01\x03\x03\x94\x80\x80\x80\x00\x13\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x02\x02\x03\x07\xe3\x81\x80\x80\x00\x12\x05\x65\x6d\x70\x74\x79\x00\x01\x08\x73\x69\x6e\x67\x75\x6c\x61\x72\x00\x02\x05\x6d\x75\x6c\x74\x69\x00\x03\x06\x6e\x65\x73\x74\x65\x64\x00\x04\x04\x64\x65\x65\x70\x00\x05\x10\x61\x73\x2d\x75\x6e\x61\x72\x79\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x06\x11\x61\x73\x2d\x62\x69\x6e\x61\x72\x79\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x07\x0f\x61\x73\x2d\x74\x65\x73\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x08\x12\x61\x73\x2d\x63\x6f\x6d\x70\x61\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x09\x0a\x62\x72\x65\x61\x6b\x2d\x62\x61\x72\x65\x00\x0a\x0b\x62\x72\x65\x61\x6b\x2d\x76\x61\x6c\x75\x65\x00\x0b\x0e\x62\x72\x65\x61\x6b\x2d\x72\x65\x70\x65\x61\x74\x65\x64\x00\x0c\x0b\x62\x72\x65\x61\x6b\x2d\x69\x6e\x6e\x65\x72\x00\x0d\x0a\x63\x6f\x6e\x74\x2d\x69\x6e\x6e\x65\x72\x00\x0e\x07\x65\x66\x66\x65\x63\x74\x73\x00\x0f\x05\x77\x68\x69\x6c\x65\x00\x10\x03\x66\x6f\x72\x00\x11\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x12\x0a\xd3\x86\x80\x80\x00\x13\x82\x80\x80\x80\x00\x00\x0f\x88\x80\x80\x80\x00\x00\x02\x00\x0f\x02\x00\x0f\x0f\x8b\x80\x80\x80\x00\x00\x02\x00\x0a\x0f\x02\x01\x10\x07\x0f\x0f\x98\x80\x80\x80\x00\x00\x02\x00\x16\x00\x16\x00\x16\x00\x16\x00\x0f\x02\x01\x16\x00\x16\x00\x16\x00\x10\x08\x0f\x0f\x95\x80\x80\x80\x00\x00\x02\x01\x02\x00\x16\x00\x01\x00\x0f\x0a\x0f\x02\x01\x16\x00\x10\x09\x0f\x0f\x0f\x8b\x81\x80\x80\x00\x00\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x02\x01\x01\x01\x16\x00\x10\x96\x01\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x8a\x80\x80\x80\x00\x00\x02\x01\x16\x00\x10\x0d\x0f\x58\x0f\x91\x80\x80\x80\x00\x00\x02\x01\x16\x00\x10\x03\x0f\x02\x01\x16\x00\x10\x04\x0f\x42\x0f\x8a\x80\x80\x80\x00\x00\x02\x01\x16\x00\x10\x0d\x0f\x5a\x0f\x97\x80\x80\x80\x00\x00\x02\x03\x16\x00\x13\x00\x00\x40\x40\x0f\x02\x03\x16\x00\x13\x00\x00\x40\x40\x0f\x87\x0f\xb4\x80\x80\x80\x00\x00\x01\x00\x02\x00\x06\x01\x06\x00\x00\x0f\x0f\x01\x00\x02\x00\x10\x01\x07\x01\x00\x0f\x0f\x01\x00\x02\x00\x10\x00\x08\x00\x01\x00\x0f\x0f\x01\x00\x02\x00\x10\x01\x08\x02\x01\x01\x01\x00\x0f\x0f\x10\x13\x0f\x90\x80\x80\x80\x00\x00\x01\x01\x02\x01\x10\x12\x06\x01\x06\x00\x10\x13\x0f\x0f\x0f\xb4\x80\x80\x80\x00\x00\x01\x01\x02\x01\x10\x12\x06\x01\x10\x13\x06\x01\x10\x14\x10\x00\x07\x01\x0b\x10\x14\x10\x01\x07\x01\x0b\x10\x15\x06\x01\x10\x16\x10\x00\x08\x00\x01\x10\x17\x10\x01\x08\x02\x01\x01\x01\x10\x15\x0f\x0f\x0f\xe6\x80\x80\x80\x00\x01\x01\x01\x10\x00\x15\x00\x14\x00\x01\x01\x02\x01\x01\x01\x10\x01\x06\x02\x0f\x0f\x0f\x40\x15\x00\x14\x00\x01\x01\x02\x01\x02\x01\x10\x02\x06\x02\x0f\x0f\x0f\x40\x15\x00\x14\x00\x01\x01\x02\x01\x01\x01\x02\x01\x10\x04\x06\x01\x0f\x0f\x0f\x0f\x40\x15\x00\x14\x00\x01\x01\x02\x01\x10\x08\x06\x01\x58\x0f\x0f\x40\x15\x00\x14\x00\x01\x01\x02\x01\x02\x01\x10\x10\x06\x02\x0f\x58\x0f\x0f\x40\x15\x00\x14\x00\x0f\xb0\x80\x80\x80\x00\x01\x01\x01\x10\x00\x15\x00\x14\x00\x02\x01\x02\x01\x06\x01\x0f\x0f\x40\x15\x00\x14\x00\x02\x01\x06\x00\x58\x0f\x40\x15\x00\x14\x00\x02\x01\x02\x01\x06\x01\x0f\x58\x0f\x40\x15\x00\x14\x00\x0f\xb2\x80\x80\x80\x00\x01\x01\x01\x01\x00\x02\x00\x10\x01\x15\x00\x14\x00\x10\x03\x42\x15\x00\x14\x00\x10\x05\x41\x15\x00\x14\x00\x10\x07\x42\x15\x00\x06\x01\x14\x00\x10\xe4\x00\x42\x15\x00\x0f\x0f\x14\x00\x10\x72\x4d\x0f\xa5\x80\x80\x80\x00\x01\x01\x02\x11\x01\x15\x01\x01\x00\x02\x00\x14\x00\xba\x07\x01\x14\x00\x14\x01\x5d\x15\x01\x14\x00\x11\x01\x5c\x15\x00\x06\x00\x0f\x0f\x14\x01\x0f\xab\x80\x80\x80\x00\x01\x02\x02\x11\x01\x15\x01\x11\x02\x15\x02\x01\x00\x02\x00\x14\x02\x14\x00\x70\x07\x01\x14\x01\x14\x02\x5d\x15\x01\x14\x02\x11\x01\x5b\x15\x02\x06\x00\x0f\x0f\x14\x01\x0f\xda\x80\x80\x80\x00\x01\x02\x03\x01\x00\x02\x00\x14\x00\x13\x00\x00\x00\x00\x83\x07\x01\x14\x01\x15\x02\x01\x00\x02\x00\x14\x02\x13\x00\x00\x00\x00\x83\x07\x01\x14\x02\x13\x00\x00\x00\x00\x85\x07\x03\x14\x03\x14\x02\x75\x15\x03\x14\x02\x13\x00\x00\x00\x40\x76\x15\x02\x06\x00\x0f\x0f\x14\x03\x14\x00\x78\x15\x03\x14\x00\x13\x00\x00\x80\x3f\x76\x15\x00\x06\x00\x0f\x0f\x14\x03\x0f");
assert_return(() => $$.exports["empty"]());
assert_return(() => $$.exports["singular"](), 7);
assert_return(() => $$.exports["multi"](), 8);
assert_return(() => $$.exports["nested"](), 9);
assert_return(() => $$.exports["deep"](), 150);
assert_return(() => $$.exports["as-unary-operand"](), 0);
assert_return(() => $$.exports["as-binary-operand"](), 12);
assert_return(() => $$.exports["as-test-operand"](), 0);
assert_return(() => $$.exports["as-compare-operand"](), 0);
assert_return(() => $$.exports["break-bare"](), 19);
assert_return(() => $$.exports["break-value"](), 18);
assert_return(() => $$.exports["break-repeated"](), 18);
assert_return(() => $$.exports["break-inner"](), 31);
assert_return(() => $$.exports["effects"](), 1);
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x24\x05\x77\x68\x69\x6c\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x97\x80\x80\x80\x00\x01\x91\x80\x80\x80\x00\x00\x01\x00\x11\x00\x16\x00\x11\x01\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["while"](int64("0")), int64("1"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x24\x05\x77\x68\x69\x6c\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x97\x80\x80\x80\x00\x01\x91\x80\x80\x80\x00\x00\x01\x00\x11\x01\x16\x00\x11\x01\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["while"](int64("1")), int64("1"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x24\x05\x77\x68\x69\x6c\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x97\x80\x80\x80\x00\x01\x91\x80\x80\x80\x00\x00\x01\x00\x11\x02\x16\x00\x11\x02\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["while"](int64("2")), int64("2"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x24\x05\x77\x68\x69\x6c\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x97\x80\x80\x80\x00\x01\x91\x80\x80\x80\x00\x00\x01\x00\x11\x03\x16\x00\x11\x06\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["while"](int64("3")), int64("6"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x24\x05\x77\x68\x69\x6c\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x11\x05\x16\x00\x11\xf8\x00\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["while"](int64("5")), int64("120"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x24\x05\x77\x68\x69\x6c\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\x01\x00\x11\x14\x16\x00\x11\x80\x80\xd0\x95\xc8\xef\xd9\xe1\x21\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["while"](int64("20")), int64("2432902008176640000"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8a\x80\x80\x80\x00\x01\x02\x24\x24\x03\x66\x6f\x72\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x97\x80\x80\x80\x00\x01\x91\x80\x80\x80\x00\x00\x01\x00\x11\x00\x16\x00\x11\x01\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["for"](int64("0")), int64("1"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8a\x80\x80\x80\x00\x01\x02\x24\x24\x03\x66\x6f\x72\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x97\x80\x80\x80\x00\x01\x91\x80\x80\x80\x00\x00\x01\x00\x11\x01\x16\x00\x11\x01\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["for"](int64("1")), int64("1"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8a\x80\x80\x80\x00\x01\x02\x24\x24\x03\x66\x6f\x72\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x97\x80\x80\x80\x00\x01\x91\x80\x80\x80\x00\x00\x01\x00\x11\x02\x16\x00\x11\x02\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["for"](int64("2")), int64("2"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8a\x80\x80\x80\x00\x01\x02\x24\x24\x03\x66\x6f\x72\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x97\x80\x80\x80\x00\x01\x91\x80\x80\x80\x00\x00\x01\x00\x11\x03\x16\x00\x11\x06\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["for"](int64("3")), int64("6"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8a\x80\x80\x80\x00\x01\x02\x24\x24\x03\x66\x6f\x72\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x11\x05\x16\x00\x11\xf8\x00\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["for"](int64("5")), int64("120"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x40\x00\x00\x40\x01\x02\x01\x02\x02\x8a\x80\x80\x80\x00\x01\x02\x24\x24\x03\x66\x6f\x72\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\x01\x00\x11\x14\x16\x00\x11\x80\x80\xd0\x95\xc8\xef\xd9\xe1\x21\x68\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["for"](int64("20")), int64("2432902008176640000"))
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x00\x00\x13\x00\x00\xe0\x40\x16\x00\x13\x00\x00\x00\x00\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](0., 7.), 0.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\xe0\x40\x13\x00\x00\x00\x00\x16\x00\x13\x00\x00\x00\x00\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](7., 0.), 0.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x80\x3f\x13\x00\x00\x80\x3f\x16\x00\x13\x00\x00\x80\x3f\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](1., 1.), 1.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x80\x3f\x13\x00\x00\x00\x40\x16\x00\x13\x00\x00\x00\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](1., 2.), 2.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x80\x3f\x13\x00\x00\x40\x40\x16\x00\x13\x00\x00\x80\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](1., 3.), 4.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x80\x3f\x13\x00\x00\x80\x40\x16\x00\x13\x00\x00\xc0\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](1., 4.), 6.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x80\x3f\x13\x00\x00\xc8\x42\x16\x00\x13\x00\x60\x1f\x45\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](1., 100.), 2550.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x80\x3f\x13\x00\x00\xca\x42\x16\x00\x13\x00\x90\x22\x45\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](1., 101.), 2601.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x00\x40\x13\x00\x00\x80\x3f\x16\x00\x13\x00\x00\x80\x3f\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](2., 1.), 1.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x40\x40\x13\x00\x00\x80\x3f\x16\x00\x13\x00\x00\x80\x3f\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](3., 1.), 1.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x20\x41\x13\x00\x00\x80\x3f\x16\x00\x13\x00\x00\x80\x3f\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](10., 1.), 1.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x00\x40\x13\x00\x00\x00\x40\x16\x00\x13\x00\x00\x40\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](2., 2.), 3.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\x00\x40\x13\x00\x00\x40\x40\x16\x00\x13\x00\x00\x80\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](2., 3.), 4.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\xe0\x40\x13\x00\x00\x80\x40\x16\x00\x13\xcf\xf3\x24\x41\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](7., 4.), 10.3095235825)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\xe0\x40\x13\x00\x00\xc8\x42\x16\x00\x13\x62\xec\x88\x45\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](7., 100.), 4381.54785156)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x00\x00\x40\x02\x03\x03\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x6e\x65\x73\x74\x69\x6e\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x01\x00\x13\x00\x00\xe0\x40\x13\x00\x00\xca\x42\x16\x00\x13\x00\x90\x22\x45\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["nesting"](7., 101.), 2601.)
assert_invalid("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x40\x00\x01\x01\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x02\x00\x0f\x0f");
assert_invalid("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x40\x00\x01\x02\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x02\x00\x0f\x0f");
assert_invalid("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x40\x00\x01\x03\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x02\x00\x0f\x0f");
assert_invalid("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x40\x00\x01\x04\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x02\x00\x0f\x0f");
assert_invalid("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x40\x00\x01\x01\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x02\x00\x0a\x0f\x0f");
assert_invalid("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x40\x00\x01\x01\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x02\x00\x13\x00\x00\x00\x00\x0f\x0f");
assert_invalid("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x40\x00\x01\x01\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x02\x00\x0a\x06\x00\x0f\x0f");
assert_invalid("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x40\x00\x01\x01\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x02\x00\x10\x00\x06\x00\x0f\x0f");
