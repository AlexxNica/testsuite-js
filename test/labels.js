var passed = 0;
var failed = 0;
var quiet = false;

testModule0();
end();

function testModule0() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,  13,   3,  64,
      0,   1,   1,  64,   1,   1,   1,   1,  64,   0,   0,   8, 102, 117, 110,  99,
    116, 105, 111, 110,  44,  43,   0,   0,   0,   0,   1,   0,   0,   1,   1,   0,
      0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   6, 101, 120, 112, 111, 114, 116, 216,   4,  43,   0,   5,  98, 108, 111,
     99, 107,   1,   5, 108, 111, 111, 112,  49,   2,   5, 108, 111, 111, 112,  50,
      3,   5, 108, 111, 111, 112,  51,   4,   5, 108, 111, 111, 112,  52,   5,   5,
    108, 111, 111, 112,  53,   6,   2, 105, 102,   7,   6, 115, 119, 105, 116,  99,
    104,   8,   6, 114, 101, 116, 117, 114, 110,   9,   6,  98, 114,  95, 105, 102,
     48,  10,   6,  98, 114,  95, 105, 102,  49,  11,   6,  98, 114,  95, 105, 102,
     50,  12,   6,  98, 114,  95, 105, 102,  51,  13,   6,  98, 114,  95, 105, 102,
     52,  14,   2,  98, 114,  15,   5, 109, 105, 115,  99,  49,  16,   5, 109, 105,
    115,  99,  50,  17,  12, 114, 101, 100, 101, 102, 105, 110, 105, 116, 105, 111,
    110,  18,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  48,  19,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  49,  20,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  50,  21,  16,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  51,  22,  16,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  52,  23,  16,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  53,  24,  16,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  54,  25,
     16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     55,  26,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  56,  27,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  57,  28,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  49,  48,  29,  17,  36,  97, 115, 115, 101, 114,
    116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  49,  30,  17,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  50,  31,  17,
     36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,
     51,  32,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  49,  52,  33,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101,
    116, 117, 114, 110,  95,  49,  53,  34,  17,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  49,  54,  35,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  55,  36,  17,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  56,
     37,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,
     95,  49,  57,  38,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  50,  48,  39,  17,  36,  97, 115, 115, 101, 114, 116,  95,
    114, 101, 116, 117, 114, 110,  95,  50,  49,  40,  17,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  50,  41,  17,  36,  97,
    115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  51,  42,
     17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     50,  52,   4,  99, 111, 100, 101, 182,   6,  43,  10,   0,   1,  16,   1,   6,
      1,   0,  16,   0,  15,  31,   1,   1,   1,  16,   0,  21,   0,   2,  20,   0,
     16,   1,  64,  21,   0,  20,   0,  16,   5,  77,   3,  20,   0,   6,   1,   2,
     15,   6,   0,   0,  15,  48,   1,   1,   1,  16,   0,  21,   0,   2,  20,   0,
     16,   1,  64,  21,   0,  20,   0,  16,   5,  77,   3,   6,   0,   1,  15,  20,
      0,  16,   8,  77,   3,  20,   0,   6,   1,   2,  15,  20,   0,  16,   1,  64,
     21,   0,   6,   0,   0,  15,  30,   1,   1,   1,  16,   0,  21,   0,   2,  20,
      0,  16,   1,  64,  21,   0,  20,   0,  16,   5,  77,   3,  20,   0,   6,   1,
      2,  15,  20,   0,  15,  31,   1,   1,   1,  16,   1,  21,   1,   2,  20,   1,
     20,   1,  64,  21,   1,  20,   1,  20,   0,  85,   3,  20,   1,   6,   1,   2,
     15,   6,   0,   0,  15,   8,   0,   2,  16,   1,  15,  16,   1,  64, 130,   1,
      1,   1,   1,  16,   0,  21,   0,   1,  16,   1,   3,   6,   0,   0,  16, 154,
      5,  21,   0,  15,  20,   0,  16,   1,  64,  21,   0,  16,   1,   3,   6,   0,
      0,  16, 154,   5,  21,   0,   4,  16, 248,   6,  21,   0,  15,  20,   0,  16,
      1,  64,  21,   0,  16,   1,   3,   6,   0,   0,  16, 154,   5,  21,   0,   4,
     16, 248,   6,  21,   0,  15,  20,   0,  16,   1,  64,  21,   0,  16,   0,   3,
     16, 248,   6,  21,   0,   4,   6,   0,   0,  16, 154,   5,  21,   0,  15,  20,
      0,  16,   1,  64,  21,   0,  16,   0,   3,  16, 248,   6,  21,   0,   4,   6,
      0,   0,  16, 154,   5,  21,   0,  15,  20,   0,  16,   1,  64,  21,   0,  15,
     20,   0,  59,   0,   1,  16,  10,   1,   1,   1,   1,   1,   1,  20,   0,   8,
      0,   4,   4,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   2,   0,
      0,   0,   3,   0,   0,   0,  15,  16,   1,  15,  16,   2,   6,   1,   3,  15,
     16,   3,   6,   1,   3,  15,  16,   4,  15,  16,   5,  15,  66,  15,  31,   0,
      1,   1,   1,  20,   0,   8,   0,   1,   0,   0,   0,   0,   1,   0,   0,   0,
      6,   0,   2,  15,  16,   0,   9,   1,  15,  16,   1,  15,  16,   2,  73,   1,
      1,   1,  16,   0,  21,   0,   1,   1,  16,   0,   7,   0,   0,  20,   0,  16,
      1,  72,  21,   0,  16,   1,   7,   0,   0,  20,   0,  16,   2,  72,  21,   0,
     15,  20,   0,  16,   4,  72,  21,   0,  16,   0,   7,   1,   0,  20,   0,  16,
      8,  72,  21,   0,  20,   0,  16,  16,  72,  21,   0,  16,   1,   7,   1,   0,
     20,   0,  16,  32,  72,  21,   0,  15,  17,   0,   1,   1,  16,   1,   6,   1,
      0,  15,  16,   1,   7,   1,   0,  16,   1,  15,  19,   0,   1,  16,   1,   3,
      1,  16,   1,   6,   1,   0,  15,   6,   1,   1,  15,  16,   1,  15,  23,   1,
      1,   1,   1,  16,   1,  21,   0,  16,   2,  21,   0,   7,   1,   0,  16,   0,
     15,  16,   0,  64,  20,   0,   9,   0,   1,   0,  16,   1,   7,   1,   0,  15,
     30,   0,   1,  16,   1,   3,   1,  16,   1,   6,   1,   0,  15,   6,   1,   1,
      4,   1,   1,  16,   1,   6,   1,   0,  15,   0,  15,  15,  16,   1,  15,  11,
      0,   1,  16,   1,   6,   1,   0,  16,   2,  73,  15,   8,   0,  16,   1,   9,
      1,  16,   2,  73,  15,   0,   1,   1,  16,   2,  15,   1,  16,   3,   6,   1,
      0,  15,  64,  15,   7,   0,  22,   0,   0,  16,   1,  77,   7,   0,  22,   0,
      1,  16,   5,  77,   7,   0,  22,   0,   2,  16,   8,  77,   7,   0,  22,   0,
      3,  16,   1,  77,   9,   0,  16,   8,  22,   1,   4,  16,  16,  77,   7,   0,
     22,   0,   5,  16,   2,  77,   7,   0,  22,   0,   6,  16,   5,  77,   9,   0,
     16,   0,  22,   1,   7,  16,  50,  77,   9,   0,  16,   1,  22,   1,   7,  16,
     20,  77,   9,   0,  16,   2,  22,   1,   7,  16,  20,  77,   9,   0,  16,   3,
     22,   1,   7,  16,   3,  77,   9,   0,  16,   4,  22,   1,   7,  16,  50,  77,
      9,   0,  16,   5,  22,   1,   7,  16,  50,  77,   9,   0,  16,   0,  22,   1,
      8,  16,   0,  77,   9,   0,  16,   1,  22,   1,   8,  16,   2,  77,   9,   0,
     16,   2,  22,   1,   8,  16,   2,  77,   7,   0,  22,   0,   9,  16,  29,  77,
      7,   0,  22,   0,  10,  16,   1,  77,   7,   0,  22,   0,  11,  16,   1,  77,
      7,   0,  22,   0,  12,  16,   2,  77,   6,   0,  22,   0,  13,  16,   1,   7,
      0,  22,   0,  14,  16,   1,  77,   7,   0,  22,   0,  15,  16,   1,  77,   7,
      0,  22,   0,  16,  16,   1,  77,   7,   0,  22,   0,  17,  16,   5,  77,
  ]);

  assertReturn(module, '$assert_return_0', 'external/testsuite/labels.wast', 241);
  assertReturn(module, '$assert_return_1', 'external/testsuite/labels.wast', 242);
  assertReturn(module, '$assert_return_2', 'external/testsuite/labels.wast', 243);
  assertReturn(module, '$assert_return_3', 'external/testsuite/labels.wast', 244);
  assertReturn(module, '$assert_return_4', 'external/testsuite/labels.wast', 245);
  assertReturn(module, '$assert_return_5', 'external/testsuite/labels.wast', 246);
  assertReturn(module, '$assert_return_6', 'external/testsuite/labels.wast', 247);
  assertReturn(module, '$assert_return_7', 'external/testsuite/labels.wast', 248);
  assertReturn(module, '$assert_return_8', 'external/testsuite/labels.wast', 249);
  assertReturn(module, '$assert_return_9', 'external/testsuite/labels.wast', 250);
  assertReturn(module, '$assert_return_10', 'external/testsuite/labels.wast', 251);
  assertReturn(module, '$assert_return_11', 'external/testsuite/labels.wast', 252);
  assertReturn(module, '$assert_return_12', 'external/testsuite/labels.wast', 253);
  assertReturn(module, '$assert_return_13', 'external/testsuite/labels.wast', 254);
  assertReturn(module, '$assert_return_14', 'external/testsuite/labels.wast', 255);
  assertReturn(module, '$assert_return_15', 'external/testsuite/labels.wast', 256);
  assertReturn(module, '$assert_return_16', 'external/testsuite/labels.wast', 257);
  assertReturn(module, '$assert_return_17', 'external/testsuite/labels.wast', 258);
  assertReturn(module, '$assert_return_18', 'external/testsuite/labels.wast', 259);
  assertReturn(module, '$assert_return_19', 'external/testsuite/labels.wast', 260);
  assertReturn(module, '$assert_return_20', 'external/testsuite/labels.wast', 261);
  assertReturn(module, '$assert_return_21', 'external/testsuite/labels.wast', 262);
  assertReturn(module, '$assert_return_22', 'external/testsuite/labels.wast', 263);
  assertReturn(module, '$assert_return_23', 'external/testsuite/labels.wast', 264);
  assertReturn(module, '$assert_return_24', 'external/testsuite/labels.wast', 265);
}

function createModule(data) {
  var u8a = new Uint8Array(data);
  var ffi = {spectest: {print: print}};
  return Wasm.instantiateModule(u8a.buffer, ffi);
}

function assertReturn(module, name, file, line) {
  try {
    var result = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (result == 1) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed.");
    failed++;
  }
}

function assertTrap(module, name, file, line) {
  var threw = false;
  try {
    module.exports[name]();
  } catch (e) {
    threw = true;
  }

  if (threw) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed, didn't throw");
    failed++;
  }
}

function invoke(module, name) {
  try {
    var invokeResult = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (!quiet)
    print(name + " = " + invokeResult);
}

function end() {
  if ((failed > 0) || !quiet)
    print(passed + "/" + (passed + failed) + " tests passed.");
}
