var passed = 0;
var failed = 0;
var quiet = false;

testModule0();
end();

function testModule0() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,  63,  11,  64,
      0,   1,   1,  64,   0,   1,   2,  64,   0,   1,   3,  64,   0,   1,   4,  64,
      1,   1,   1,   1,  64,   1,   2,   1,   2,  64,   1,   3,   1,   3,  64,   1,
      4,   1,   4,  64,   5,   2,   3,   4,   1,   1,   0,  64,   5,   2,   3,   4,
      1,   1,   1,   2,  64,   5,   2,   3,   4,   1,   1,   1,   4,   8, 102, 117,
    110,  99, 116, 105, 111, 110,  23,  22,   0,   1,   2,   3,   4,   5,   6,   7,
      8,   9,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   6, 101,
    120, 112, 111, 114, 116, 227,   2,  22,   0,  14, 116, 121, 112, 101,  45, 108,
    111,  99,  97, 108,  45, 105,  51,  50,   1,  14, 116, 121, 112, 101,  45, 108,
    111,  99,  97, 108,  45, 105,  54,  52,   2,  14, 116, 121, 112, 101,  45, 108,
    111,  99,  97, 108,  45, 102,  51,  50,   3,  14, 116, 121, 112, 101,  45, 108,
    111,  99,  97, 108,  45, 102,  54,  52,   4,  14, 116, 121, 112, 101,  45, 112,
     97, 114,  97, 109,  45, 105,  51,  50,   5,  14, 116, 121, 112, 101,  45, 112,
     97, 114,  97, 109,  45, 105,  54,  52,   6,  14, 116, 121, 112, 101,  45, 112,
     97, 114,  97, 109,  45, 102,  51,  50,   7,  14, 116, 121, 112, 101,  45, 112,
     97, 114,  97, 109,  45, 102,  54,  52,   8,  10, 116, 121, 112, 101,  45, 109,
    105, 120, 101, 100,   9,   5, 119, 114, 105, 116, 101,  10,   6, 114, 101, 115,
    117, 108, 116,  11,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  48,  12,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  49,  13,  16,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  50,  14,  16,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  51,  15,  16,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  52,  16,  16,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  53,  17,
     16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     54,  18,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  55,  19,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  56,  20,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  57,  21,  17,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  49,  48,   4,  99, 111, 100, 101, 254,
      3,  22,   7,   1,   1,   1,  16,   0,  21,   0,   7,   1,   1,   2,  17,   0,
     21,   0,  10,   1,   1,   3,  19,   0,   0,   0,   0,  21,   0,  14,   1,   1,
      4,  18,   0,   0,   0,   0,   0,   0,   0,   0,  21,   0,   5,   0,  16,  10,
     21,   0,   5,   0,  17,  11,  21,   0,   8,   0,  19, 154, 153,  49,  65,  21,
      0,  12,   0,  18, 102, 102, 102, 102, 102, 102,  40,  64,  21,   0,  72,   3,
      2,   2,   1,   3,   1,   4,  17,   0,  21,   0, 186,  19,   0,   0,   0,   0,
     21,   1, 124,  18,   0,   0,   0,   0,   0,   0,   0,   0,  21,   2, 144,  16,
      0,  21,   3,  90,  16,   0,  21,   4,  90,  19,   0,   0,   0,   0,  21,   7,
    124,  17,   0,  21,   5, 186,  17,   0,  21,   6, 186,  18,   0,   0,   0,   0,
      0,   0,   0,   0,  21,   8, 144,  78,   3,   2,   2,   1,   3,   1,   4,  19,
    154, 153, 153, 190,  21,   1,  16,  40,  21,   3,  16, 121,  21,   4,  19,   0,
      0, 176,  64,  21,   7,  17,   6,  21,   5,  18,   0,   0,   0,   0,   0,   0,
     32,  64,  21,   8,  20,   0, 177,  20,   1, 178,  20,   2,  20,   3, 175,  20,
      4, 174,  20,   7, 178,  20,   5, 177,  20,   6, 177,  20,   8, 137, 137, 137,
    137, 137, 137, 137, 137, 163,  78,   3,   2,   2,   1,   3,   1,   4,  17,   1,
     21,   0, 177,  19,   0,   0,   0,  64,  21,   1, 178,  18, 102, 102, 102, 102,
    102, 102,  10,  64,  21,   2,  16,   4,  21,   3, 175,  16,   5,  21,   4, 174,
     19,   0,   0, 176,  64,  21,   7, 178,  17,   6,  21,   5, 177,  17,   0,  21,
      6, 177,  18,   0,   0,   0,   0,   0,   0,  32,  64,  21,   8, 137, 137, 137,
    137, 137, 137, 137, 137,   7,   0,  22,   0,   0,  16,   0,  77,   7,   0,  22,
      0,   1,  17,   0, 104,  12,   0,  22,   0,   2, 180,  19,   0,   0,   0,   0,
    180,  77,  16,   0,  22,   0,   3, 181,  18,   0,   0,   0,   0,   0,   0,   0,
      0, 181, 104,   9,   0,  16,   2,  22,   1,   4,  16,  10,  77,   9,   0,  17,
      3,  22,   1,   5,  17,  11, 104,  17,   0,  19, 205, 204, 140,  64,  22,   1,
      6, 180,  19, 154, 153,  49,  65, 180,  77,  25,   0,  18,   0,   0,   0,   0,
      0,   0,  22,  64,  22,   1,   7, 181,  18, 102, 102, 102, 102, 102, 102,  40,
     64, 181, 104,  26,   0,  17,   1,  19, 205, 204,  12,  64,  18, 102, 102, 102,
    102, 102, 102,  10,  64,  16,   4,  16,   5,  22,   5,   8,  16,   1,  27,   0,
     17,   1,  19,   0,   0,   0,  64,  18, 102, 102, 102, 102, 102, 102,  10,  64,
     16,   4,  16,   5,  22,   5,   9,  17,  56, 104,  36,   0,  17, 127,  19,   0,
      0,   0, 192,  18, 102, 102, 102, 102, 102, 102,  10, 192,  16, 124,  16, 123,
     22,   5,  10, 181,  18, 102, 102, 102, 102, 102, 102,  65,  64, 181, 104,
  ]);

  assertReturn(module, '$assert_return_0', 'external/testsuite/set_local.wast', 99);
  assertReturn(module, '$assert_return_1', 'external/testsuite/set_local.wast', 100);
  assertReturn(module, '$assert_return_2', 'external/testsuite/set_local.wast', 101);
  assertReturn(module, '$assert_return_3', 'external/testsuite/set_local.wast', 102);
  assertReturn(module, '$assert_return_4', 'external/testsuite/set_local.wast', 104);
  assertReturn(module, '$assert_return_5', 'external/testsuite/set_local.wast', 105);
  assertReturn(module, '$assert_return_6', 'external/testsuite/set_local.wast', 106);
  assertReturn(module, '$assert_return_7', 'external/testsuite/set_local.wast', 107);
  assertReturn(module, '$assert_return_8', 'external/testsuite/set_local.wast', 110);
  assertReturn(module, '$assert_return_9', 'external/testsuite/set_local.wast', 116);
  assertReturn(module, '$assert_return_10', 'external/testsuite/set_local.wast', 123);
}

function createModule(data) {
  var u8a = new Uint8Array(data);
  var ffi = {spectest: {print: print}};
  return Wasm.instantiateModule(u8a, ffi);
}

function assertReturn(module, name, file, line) {
  try {
    var result = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (result == 1) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed.");
    failed++;
  }
}

function assertTrap(module, name, file, line) {
  var threw = false;
  try {
    module.exports[name]();
  } catch (e) {
    threw = true;
  }

  if (threw) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed, didn't throw");
    failed++;
  }
}

function invoke(module, name) {
  try {
    var invokeResult = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (!quiet)
    print(name + " = " + invokeResult);
}

function end() {
  if ((failed > 0) || !quiet)
    print(passed + "/" + (passed + failed) + " tests passed.");
}
