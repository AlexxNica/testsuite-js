var passed = 0;
var failed = 0;
var quiet = false;

testModule0();
testModule1();
testModule2();
testModule3();
end();

function testModule0() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,  14,   3,  64,
      2,   1,   1,   0,  64,   2,   2,   2,   0,  64,   0,   0,   8, 102, 117, 110,
     99, 116, 105, 111, 110,   9,   8,   0,   0,   1,   1,   2,   2,   2,   2,   6,
    101, 120, 112, 111, 114, 116, 137,   1,   8,   0,  16, 110, 111,  95, 100,  99,
    101,  46, 105,  51,  50,  46, 100, 105, 118,  95, 115,   1,  16, 110, 111,  95,
    100,  99, 101,  46, 105,  51,  50,  46, 100, 105, 118,  95, 117,   2,  16, 110,
    111,  95, 100,  99, 101,  46, 105,  54,  52,  46, 100, 105, 118,  95, 115,   3,
     16, 110, 111,  95, 100,  99, 101,  46, 105,  54,  52,  46, 100, 105, 118,  95,
    117,   4,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,
     48,   5,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,
     49,   6,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,
     50,   7,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,
     51,   4,  99, 111, 100, 101,  65,   8,   6,   0,  20,   0,  20,   1,  67,   6,
      0,  20,   0,  20,   1,  68,   6,   0,  20,   0,  20,   1,  94,   6,   0,  20,
      0,  20,   1,  95,   8,   0,  16,   1,  16,   0,  22,   2,   0,   8,   0,  16,
      1,  16,   0,  22,   2,   1,   8,   0,  17,   1,  17,   0,  22,   2,   2,   8,
      0,  17,   1,  17,   0,  22,   2,   3,
  ]);

  assertTrap(module, '$assert_trap_0', 'external/testsuite/traps.wast', 20);
  assertTrap(module, '$assert_trap_1', 'external/testsuite/traps.wast', 21);
  assertTrap(module, '$assert_trap_2', 'external/testsuite/traps.wast', 22);
  assertTrap(module, '$assert_trap_3', 'external/testsuite/traps.wast', 23);
}

function testModule1() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,  14,   3,  64,
      2,   1,   1,   0,  64,   2,   2,   2,   0,  64,   0,   0,   8, 102, 117, 110,
     99, 116, 105, 111, 110,   9,   8,   0,   0,   1,   1,   2,   2,   2,   2,   6,
    101, 120, 112, 111, 114, 116, 137,   1,   8,   0,  16, 110, 111,  95, 100,  99,
    101,  46, 105,  51,  50,  46, 114, 101, 109,  95, 115,   1,  16, 110, 111,  95,
    100,  99, 101,  46, 105,  51,  50,  46, 114, 101, 109,  95, 117,   2,  16, 110,
    111,  95, 100,  99, 101,  46, 105,  54,  52,  46, 114, 101, 109,  95, 115,   3,
     16, 110, 111,  95, 100,  99, 101,  46, 105,  54,  52,  46, 114, 101, 109,  95,
    117,   4,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,
     48,   5,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,
     49,   6,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,
     50,   7,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,
     51,   4,  99, 111, 100, 101,  65,   8,   6,   0,  20,   0,  20,   1,  69,   6,
      0,  20,   0,  20,   1,  70,   6,   0,  20,   0,  20,   1,  96,   6,   0,  20,
      0,  20,   1,  97,   8,   0,  16,   1,  16,   0,  22,   2,   0,   8,   0,  16,
      1,  16,   0,  22,   2,   1,   8,   0,  17,   1,  17,   0,  22,   2,   2,   8,
      0,  17,   1,  17,   0,  22,   2,   3,
  ]);

  assertTrap(module, '$assert_trap_0', 'external/testsuite/traps.wast', 40);
  assertTrap(module, '$assert_trap_1', 'external/testsuite/traps.wast', 41);
  assertTrap(module, '$assert_trap_2', 'external/testsuite/traps.wast', 42);
  assertTrap(module, '$assert_trap_3', 'external/testsuite/traps.wast', 43);
}

function testModule2() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,  12,   3,  64,
      1,   3,   0,  64,   1,   4,   0,  64,   0,   0,   8, 102, 117, 110,  99, 116,
    105, 111, 110,  17,  16,   0,   0,   1,   1,   0,   0,   1,   1,   2,   2,   2,
      2,   2,   2,   2,   2,   6, 101, 120, 112, 111, 114, 116, 193,   2,  16,   0,
     22, 110, 111,  95, 100,  99, 101,  46, 105,  51,  50,  46, 116, 114, 117, 110,
     99,  95, 115,  95, 102,  51,  50,   1,  22, 110, 111,  95, 100,  99, 101,  46,
    105,  51,  50,  46, 116, 114, 117, 110,  99,  95, 117,  95, 102,  51,  50,   2,
     22, 110, 111,  95, 100,  99, 101,  46, 105,  51,  50,  46, 116, 114, 117, 110,
     99,  95, 115,  95, 102,  54,  52,   3,  22, 110, 111,  95, 100,  99, 101,  46,
    105,  51,  50,  46, 116, 114, 117, 110,  99,  95, 117,  95, 102,  54,  52,   4,
     22, 110, 111,  95, 100,  99, 101,  46, 105,  54,  52,  46, 116, 114, 117, 110,
     99,  95, 115,  95, 102,  51,  50,   5,  22, 110, 111,  95, 100,  99, 101,  46,
    105,  54,  52,  46, 116, 114, 117, 110,  99,  95, 117,  95, 102,  51,  50,   6,
     22, 110, 111,  95, 100,  99, 101,  46, 105,  54,  52,  46, 116, 114, 117, 110,
     99,  95, 115,  95, 102,  54,  52,   7,  22, 110, 111,  95, 100,  99, 101,  46,
    105,  54,  52,  46, 116, 114, 117, 110,  99,  95, 117,  95, 102,  54,  52,   8,
     14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,  48,   9,
     14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,  49,  10,
     14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,  50,  11,
     14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,  51,  12,
     14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,  52,  13,
     14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,  53,  14,
     14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,  54,  15,
     14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,  95,  55,   4,
     99, 111, 100, 101, 137,   1,  16,   4,   0,  20,   0, 157,   4,   0,  20,   0,
    159,   4,   0,  20,   0, 158,   4,   0,  20,   0, 160,   4,   0,  20,   0, 162,
      4,   0,  20,   0, 164,   4,   0,  20,   0, 163,   4,   0,  20,   0, 165,   9,
      0,  19,   0,   0, 192, 127,  22,   1,   0,   9,   0,  19,   0,   0, 192, 127,
     22,   1,   1,  13,   0,  18,   0,   0,   0,   0,   0,   0, 248, 127,  22,   1,
      2,  13,   0,  18,   0,   0,   0,   0,   0,   0, 248, 127,  22,   1,   3,   9,
      0,  19,   0,   0, 192, 127,  22,   1,   4,   9,   0,  19,   0,   0, 192, 127,
     22,   1,   5,  13,   0,  18,   0,   0,   0,   0,   0,   0, 248, 127,  22,   1,
      6,  13,   0,  18,   0,   0,   0,   0,   0,   0, 248, 127,  22,   1,   7,
  ]);

  assertTrap(module, '$assert_trap_0', 'external/testsuite/traps.wast', 65);
  assertTrap(module, '$assert_trap_1', 'external/testsuite/traps.wast', 66);
  assertTrap(module, '$assert_trap_2', 'external/testsuite/traps.wast', 67);
  assertTrap(module, '$assert_trap_3', 'external/testsuite/traps.wast', 68);
  assertTrap(module, '$assert_trap_4', 'external/testsuite/traps.wast', 69);
  assertTrap(module, '$assert_trap_5', 'external/testsuite/traps.wast', 70);
  assertTrap(module, '$assert_trap_6', 'external/testsuite/traps.wast', 71);
  assertTrap(module, '$assert_trap_7', 'external/testsuite/traps.wast', 72);
}

function testModule3() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,   8,   2,  64,
      1,   1,   0,  64,   0,   0,   8, 102, 117, 110,  99, 116, 105, 111, 110,   9,
      8,   0,   0,   0,   0,   1,   1,   1,   1,   6, 109, 101, 109, 111, 114, 121,
      3,   1,   1,   0,   6, 101, 120, 112, 111, 114, 116, 133,   1,   8,   0,  15,
    110, 111,  95, 100,  99, 101,  46, 105,  51,  50,  46, 108, 111,  97, 100,   1,
     15, 110, 111,  95, 100,  99, 101,  46, 105,  54,  52,  46, 108, 111,  97, 100,
      2,  15, 110, 111,  95, 100,  99, 101,  46, 102,  51,  50,  46, 108, 111,  97,
    100,   3,  15, 110, 111,  95, 100,  99, 101,  46, 102,  54,  52,  46, 108, 111,
     97, 100,   4,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,
     95,  48,   5,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,
     95,  49,   6,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,
     95,  50,   7,  14,  36,  97, 115, 115, 101, 114, 116,  95, 116, 114,  97, 112,
     95,  51,   4,  99, 111, 100, 101,  65,   8,   6,   0,  20,   0,  42,   2,   0,
      6,   0,  20,   0,  43,   3,   0,   6,   0,  20,   0,  44,   2,   0,   6,   0,
     20,   0,  45,   3,   0,   8,   0,  16, 128, 128,   4,  22,   1,   0,   8,   0,
     16, 128, 128,   4,  22,   1,   1,   8,   0,  16, 128, 128,   4,  22,   1,   2,
      8,   0,  16, 128, 128,   4,  22,   1,   3,
  ]);

  assertTrap(module, '$assert_trap_0', 'external/testsuite/traps.wast', 87);
  assertTrap(module, '$assert_trap_1', 'external/testsuite/traps.wast', 88);
  assertTrap(module, '$assert_trap_2', 'external/testsuite/traps.wast', 89);
  assertTrap(module, '$assert_trap_3', 'external/testsuite/traps.wast', 90);
}

function createModule(data) {
  var u8a = new Uint8Array(data);
  var ffi = {spectest: {print: print}};
  return Wasm.instantiateModule(u8a, ffi);
}

function assertReturn(module, name, file, line) {
  try {
    var result = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (result == 1) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed.");
    failed++;
  }
}

function assertTrap(module, name, file, line) {
  var threw = false;
  try {
    module.exports[name]();
  } catch (e) {
    threw = true;
  }

  if (threw) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed, didn't throw");
    failed++;
  }
}

function invoke(module, name) {
  try {
    var invokeResult = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (!quiet)
    print(name + " = " + invokeResult);
}

function end() {
  if ((failed > 0) || !quiet)
    print(passed + "/" + (passed + failed) + " tests passed.");
}
