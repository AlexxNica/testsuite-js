var passed = 0;
var failed = 0;
var quiet = false;

testModule0();
testModule1();
testModule2();
end();

function testModule0() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,  16,   3,  64,
      2,   3,   3,   1,   3,  64,   1,   3,   1,   3,  64,   0,   1,   1,   8, 102,
    117, 110,  99, 116, 105, 111, 110,  68,  67,   0,   0,   0,   0,   1,   0,   0,
      1,   1,   1,   1,   1,   1,   0,   2,   2,   2,   2,   2,   2,   2,   2,   2,
      2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
      2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
      2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   6, 101, 120, 112,
    111, 114, 116, 207,   8,  67,   0,   3,  97, 100, 100,   1,   3, 115, 117,  98,
      2,   3, 109, 117, 108,   3,   3, 100, 105, 118,   4,   4, 115, 113, 114, 116,
      5,   3, 109, 105, 110,   6,   3, 109,  97, 120,   7,   4,  99, 101, 105, 108,
      8,   5, 102, 108, 111, 111, 114,   9,   5, 116, 114, 117, 110,  99,  10,   7,
    110, 101,  97, 114, 101, 115, 116,  11,   3,  97,  98, 115,  12,   3, 110, 101,
    103,  13,   8,  99, 111, 112, 121, 115, 105, 103, 110,  14,  20,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95, 110,  97, 110,  95,
     48,  15,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  49,  16,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  50,  17,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  51,  18,  16,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  52,  19,  16,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  53,  20,  20,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95, 110,  97, 110,  95,
     54,  21,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  55,  22,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  56,  23,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  57,  24,  17,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  49,  48,  25,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  49,  26,  21,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95, 110,  97,
    110,  95,  49,  50,  27,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101,
    116, 117, 114, 110,  95,  49,  51,  28,  17,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  49,  52,  29,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  53,  30,  17,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  54,
     31,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,
     95,  49,  55,  32,  21,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95, 110,  97, 110,  95,  49,  56,  33,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  57,  34,  17,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  48,
     35,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,
     95,  50,  49,  36,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  50,  50,  37,  17,  36,  97, 115, 115, 101, 114, 116,  95,
    114, 101, 116, 117, 114, 110,  95,  50,  51,  38,  21,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95, 110,  97, 110,  95,  50,  52,
     39,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,
     95,  50,  53,  40,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  50,  54,  41,  17,  36,  97, 115, 115, 101, 114, 116,  95,
    114, 101, 116, 117, 114, 110,  95,  50,  55,  42,  17,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  56,  43,  17,  36,  97,
    115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  57,  44,
     17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     51,  48,  45,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117,
    114, 110,  95,  51,  49,  46,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  51,  50,  47,  17,  36,  97, 115, 115, 101, 114,
    116,  95, 114, 101, 116, 117, 114, 110,  95,  51,  51,  48,  17,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  51,  52,  49,  17,
     36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  51,
     53,  50,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  51,  54,  51,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101,
    116, 117, 114, 110,  95,  51,  55,  52,  17,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  51,  56,  53,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  51,  57,  54,  17,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  52,  48,
     55,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,
     95,  52,  49,  56,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  52,  50,  57,  17,  36,  97, 115, 115, 101, 114, 116,  95,
    114, 101, 116, 117, 114, 110,  95,  52,  51,  58,  17,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  52,  52,  59,  17,  36,  97,
    115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  52,  53,  60,
     17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     52,  54,  61,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117,
    114, 110,  95,  52,  55,  62,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  52,  56,  63,  17,  36,  97, 115, 115, 101, 114,
    116,  95, 114, 101, 116, 117, 114, 110,  95,  52,  57,  64,  17,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  53,  48,  65,  17,
     36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  53,
     49,  66,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  53,  50,   4,  99, 111, 100, 101, 210,   9,  67,   6,   0,  20,   0,
     20,   1, 117,   6,   0,  20,   0,  20,   1, 118,   6,   0,  20,   0,  20,   1,
    119,   6,   0,  20,   0,  20,   1, 120,   4,   0,  20,   0, 130,   6,   0,  20,
      0,  20,   1, 121,   6,   0,  20,   0,  20,   1, 122,   4,   0,  20,   0, 126,
      4,   0,  20,   0, 127,   4,   0,  20,   0, 128,   4,   0,  20,   0, 129,   4,
      0,  20,   0, 123,   4,   0,  20,   0, 124,   6,   0,  20,   0,  20,   1, 125,
     23,   1,   1,   3,  19,   0,   0, 128, 127,  19,   0,   0, 128, 255,  22,   2,
      0,  21,   0,  20,   0,  20,   0, 132,  22,   0,  19, 226, 241, 128, 127,  19,
      0,   0, 128,  63,  22,   2,   0, 180,  19, 226, 241, 192, 127, 180,  77,  22,
      0,  19,   0,   0, 128,  63,  19, 226, 241, 128, 127,  22,   2,   0, 180,  19,
    226, 241, 192, 127, 180,  77,  22,   0,  19, 226, 241, 128, 255,  19,   0,   0,
    128,  63,  22,   2,   0, 180,  19, 226, 241, 192, 255, 180,  77,  22,   0,  19,
      0,   0, 128,  63,  19, 226, 241, 128, 255,  22,   2,   0, 180,  19, 226, 241,
    192, 255, 180,  77,  22,   0,  19, 226, 241, 128, 127,  19, 226, 241, 128, 127,
     22,   2,   0, 180,  19, 226, 241, 192, 127, 180,  77,  23,   1,   1,   3,  19,
      0,   0, 128, 127,  19,   0,   0, 128, 127,  22,   2,   1,  21,   0,  20,   0,
     20,   0, 132,  22,   0,  19, 226, 241, 128, 127,  19,   0,   0, 128,  63,  22,
      2,   1, 180,  19, 226, 241, 192, 127, 180,  77,  22,   0,  19,   0,   0, 128,
     63,  19, 226, 241, 128, 127,  22,   2,   1, 180,  19, 226, 241, 192, 127, 180,
     77,  22,   0,  19, 226, 241, 128, 255,  19,   0,   0, 128,  63,  22,   2,   1,
    180,  19, 226, 241, 192, 255, 180,  77,  22,   0,  19,   0,   0, 128,  63,  19,
    226, 241, 128, 255,  22,   2,   1, 180,  19, 226, 241, 192, 255, 180,  77,  22,
      0,  19, 226, 241, 128, 127,  19, 226, 241, 128, 127,  22,   2,   1, 180,  19,
    226, 241, 192, 127, 180,  77,  23,   1,   1,   3,  19,   0,   0, 128, 127,  19,
      0,   0,   0,   0,  22,   2,   2,  21,   0,  20,   0,  20,   0, 132,  22,   0,
     19, 226, 241, 128, 127,  19,   0,   0, 128,  63,  22,   2,   2, 180,  19, 226,
    241, 192, 127, 180,  77,  22,   0,  19,   0,   0, 128,  63,  19, 226, 241, 128,
    127,  22,   2,   2, 180,  19, 226, 241, 192, 127, 180,  77,  22,   0,  19, 226,
    241, 128, 255,  19,   0,   0, 128,  63,  22,   2,   2, 180,  19, 226, 241, 192,
    255, 180,  77,  22,   0,  19,   0,   0, 128,  63,  19, 226, 241, 128, 255,  22,
      2,   2, 180,  19, 226, 241, 192, 255, 180,  77,  22,   0,  19, 226, 241, 128,
    127,  19, 226, 241, 128, 127,  22,   2,   2, 180,  19, 226, 241, 192, 127, 180,
     77,  23,   1,   1,   3,  19,   0,   0,   0,   0,  19,   0,   0,   0,   0,  22,
      2,   3,  21,   0,  20,   0,  20,   0, 132,  22,   0,  19, 226, 241, 128, 127,
     19,   0,   0, 128,  63,  22,   2,   3, 180,  19, 226, 241, 192, 127, 180,  77,
     22,   0,  19,   0,   0, 128,  63,  19, 226, 241, 128, 127,  22,   2,   3, 180,
     19, 226, 241, 192, 127, 180,  77,  22,   0,  19, 226, 241, 128, 255,  19,   0,
      0, 128,  63,  22,   2,   3, 180,  19, 226, 241, 192, 255, 180,  77,  22,   0,
     19,   0,   0, 128,  63,  19, 226, 241, 128, 255,  22,   2,   3, 180,  19, 226,
    241, 192, 255, 180,  77,  22,   0,  19, 226, 241, 128, 127,  19, 226, 241, 128,
    127,  22,   2,   3, 180,  19, 226, 241, 192, 127, 180,  77,  18,   1,   1,   3,
     19,   0,   0, 128, 191,  22,   1,   4,  21,   0,  20,   0,  20,   0, 132,  17,
      0,  19, 226, 241, 128, 127,  22,   1,   4, 180,  19, 226, 241, 192, 127, 180,
     77,  17,   0,  19, 226, 241, 128, 255,  22,   1,   4, 180,  19, 226, 241, 192,
    255, 180,  77,  22,   0,  19, 226, 241, 128, 127,  19,   0,   0, 128,  63,  22,
      2,   5, 180,  19, 226, 241, 192, 127, 180,  77,  22,   0,  19,   0,   0, 128,
     63,  19, 226, 241, 128, 127,  22,   2,   5, 180,  19, 226, 241, 192, 127, 180,
     77,  22,   0,  19, 226, 241, 128, 255,  19,   0,   0, 128,  63,  22,   2,   5,
    180,  19, 226, 241, 192, 255, 180,  77,  22,   0,  19,   0,   0, 128,  63,  19,
    226, 241, 128, 255,  22,   2,   5, 180,  19, 226, 241, 192, 255, 180,  77,  22,
      0,  19, 226, 241, 128, 127,  19, 226, 241, 128, 127,  22,   2,   5, 180,  19,
    226, 241, 192, 127, 180,  77,  22,   0,  19, 226, 241, 128, 127,  19,   0,   0,
    128,  63,  22,   2,   6, 180,  19, 226, 241, 192, 127, 180,  77,  22,   0,  19,
      0,   0, 128,  63,  19, 226, 241, 128, 127,  22,   2,   6, 180,  19, 226, 241,
    192, 127, 180,  77,  22,   0,  19, 226, 241, 128, 255,  19,   0,   0, 128,  63,
     22,   2,   6, 180,  19, 226, 241, 192, 255, 180,  77,  22,   0,  19,   0,   0,
    128,  63,  19, 226, 241, 128, 255,  22,   2,   6, 180,  19, 226, 241, 192, 255,
    180,  77,  22,   0,  19, 226, 241, 128, 127,  19, 226, 241, 128, 127,  22,   2,
      6, 180,  19, 226, 241, 192, 127, 180,  77,  17,   0,  19, 226, 241, 128, 127,
     22,   1,   7, 180,  19, 226, 241, 192, 127, 180,  77,  17,   0,  19, 226, 241,
    128, 255,  22,   1,   7, 180,  19, 226, 241, 192, 255, 180,  77,  17,   0,  19,
    226, 241, 128, 127,  22,   1,   8, 180,  19, 226, 241, 192, 127, 180,  77,  17,
      0,  19, 226, 241, 128, 255,  22,   1,   8, 180,  19, 226, 241, 192, 255, 180,
     77,  17,   0,  19, 226, 241, 128, 127,  22,   1,   9, 180,  19, 226, 241, 192,
    127, 180,  77,  17,   0,  19, 226, 241, 128, 255,  22,   1,   9, 180,  19, 226,
    241, 192, 255, 180,  77,  17,   0,  19, 226, 241, 128, 127,  22,   1,  10, 180,
     19, 226, 241, 192, 127, 180,  77,  17,   0,  19, 226, 241, 128, 255,  22,   1,
     10, 180,  19, 226, 241, 192, 255, 180,  77,  17,   0,  19, 226, 241, 128, 127,
     22,   1,  11, 180,  19, 226, 241, 128, 127, 180,  77,  17,   0,  19, 226, 241,
    128, 255,  22,   1,  11, 180,  19, 226, 241, 128, 127, 180,  77,  17,   0,  19,
    226, 241, 128, 127,  22,   1,  12, 180,  19, 226, 241, 128, 255, 180,  77,  17,
      0,  19, 226, 241, 128, 255,  22,   1,  12, 180,  19, 226, 241, 128, 127, 180,
     77,  22,   0,  19, 226, 241, 128, 127,  19,   0,   0, 128,  63,  22,   2,  13,
    180,  19, 226, 241, 128, 127, 180,  77,  22,   0,  19, 226, 241, 128, 127,  19,
      0,   0, 128, 191,  22,   2,  13, 180,  19, 226, 241, 128, 255, 180,  77,  22,
      0,  19, 226, 241, 128, 255,  19,   0,   0, 128,  63,  22,   2,  13, 180,  19,
    226, 241, 128, 127, 180,  77,  22,   0,  19, 226, 241, 128, 255,  19,   0,   0,
    128, 191,  22,   2,  13, 180,  19, 226, 241, 128, 255, 180,  77,
  ]);

  assertReturn(module, '$assert_return_nan_0', 'external/testsuite/nan-propagation.wast', 35);
  assertReturn(module, '$assert_return_1', 'external/testsuite/nan-propagation.wast', 36);
  assertReturn(module, '$assert_return_2', 'external/testsuite/nan-propagation.wast', 37);
  assertReturn(module, '$assert_return_3', 'external/testsuite/nan-propagation.wast', 38);
  assertReturn(module, '$assert_return_4', 'external/testsuite/nan-propagation.wast', 39);
  assertReturn(module, '$assert_return_5', 'external/testsuite/nan-propagation.wast', 40);
  assertReturn(module, '$assert_return_nan_6', 'external/testsuite/nan-propagation.wast', 42);
  assertReturn(module, '$assert_return_7', 'external/testsuite/nan-propagation.wast', 43);
  assertReturn(module, '$assert_return_8', 'external/testsuite/nan-propagation.wast', 44);
  assertReturn(module, '$assert_return_9', 'external/testsuite/nan-propagation.wast', 45);
  assertReturn(module, '$assert_return_10', 'external/testsuite/nan-propagation.wast', 46);
  assertReturn(module, '$assert_return_11', 'external/testsuite/nan-propagation.wast', 47);
  assertReturn(module, '$assert_return_nan_12', 'external/testsuite/nan-propagation.wast', 49);
  assertReturn(module, '$assert_return_13', 'external/testsuite/nan-propagation.wast', 50);
  assertReturn(module, '$assert_return_14', 'external/testsuite/nan-propagation.wast', 51);
  assertReturn(module, '$assert_return_15', 'external/testsuite/nan-propagation.wast', 52);
  assertReturn(module, '$assert_return_16', 'external/testsuite/nan-propagation.wast', 53);
  assertReturn(module, '$assert_return_17', 'external/testsuite/nan-propagation.wast', 54);
  assertReturn(module, '$assert_return_nan_18', 'external/testsuite/nan-propagation.wast', 56);
  assertReturn(module, '$assert_return_19', 'external/testsuite/nan-propagation.wast', 57);
  assertReturn(module, '$assert_return_20', 'external/testsuite/nan-propagation.wast', 58);
  assertReturn(module, '$assert_return_21', 'external/testsuite/nan-propagation.wast', 59);
  assertReturn(module, '$assert_return_22', 'external/testsuite/nan-propagation.wast', 60);
  assertReturn(module, '$assert_return_23', 'external/testsuite/nan-propagation.wast', 61);
  assertReturn(module, '$assert_return_nan_24', 'external/testsuite/nan-propagation.wast', 63);
  assertReturn(module, '$assert_return_25', 'external/testsuite/nan-propagation.wast', 64);
  assertReturn(module, '$assert_return_26', 'external/testsuite/nan-propagation.wast', 65);
  assertReturn(module, '$assert_return_27', 'external/testsuite/nan-propagation.wast', 67);
  assertReturn(module, '$assert_return_28', 'external/testsuite/nan-propagation.wast', 68);
  assertReturn(module, '$assert_return_29', 'external/testsuite/nan-propagation.wast', 69);
  assertReturn(module, '$assert_return_30', 'external/testsuite/nan-propagation.wast', 70);
  assertReturn(module, '$assert_return_31', 'external/testsuite/nan-propagation.wast', 71);
  assertReturn(module, '$assert_return_32', 'external/testsuite/nan-propagation.wast', 73);
  assertReturn(module, '$assert_return_33', 'external/testsuite/nan-propagation.wast', 74);
  assertReturn(module, '$assert_return_34', 'external/testsuite/nan-propagation.wast', 75);
  assertReturn(module, '$assert_return_35', 'external/testsuite/nan-propagation.wast', 76);
  assertReturn(module, '$assert_return_36', 'external/testsuite/nan-propagation.wast', 77);
  assertReturn(module, '$assert_return_37', 'external/testsuite/nan-propagation.wast', 79);
  assertReturn(module, '$assert_return_38', 'external/testsuite/nan-propagation.wast', 80);
  assertReturn(module, '$assert_return_39', 'external/testsuite/nan-propagation.wast', 82);
  assertReturn(module, '$assert_return_40', 'external/testsuite/nan-propagation.wast', 83);
  assertReturn(module, '$assert_return_41', 'external/testsuite/nan-propagation.wast', 85);
  assertReturn(module, '$assert_return_42', 'external/testsuite/nan-propagation.wast', 86);
  assertReturn(module, '$assert_return_43', 'external/testsuite/nan-propagation.wast', 88);
  assertReturn(module, '$assert_return_44', 'external/testsuite/nan-propagation.wast', 89);
  assertReturn(module, '$assert_return_45', 'external/testsuite/nan-propagation.wast', 91);
  assertReturn(module, '$assert_return_46', 'external/testsuite/nan-propagation.wast', 92);
  assertReturn(module, '$assert_return_47', 'external/testsuite/nan-propagation.wast', 94);
  assertReturn(module, '$assert_return_48', 'external/testsuite/nan-propagation.wast', 95);
  assertReturn(module, '$assert_return_49', 'external/testsuite/nan-propagation.wast', 97);
  assertReturn(module, '$assert_return_50', 'external/testsuite/nan-propagation.wast', 98);
  assertReturn(module, '$assert_return_51', 'external/testsuite/nan-propagation.wast', 99);
  assertReturn(module, '$assert_return_52', 'external/testsuite/nan-propagation.wast', 100);
}

function testModule1() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,  16,   3,  64,
      2,   4,   4,   1,   4,  64,   1,   4,   1,   4,  64,   0,   1,   1,   8, 102,
    117, 110,  99, 116, 105, 111, 110,  68,  67,   0,   0,   0,   0,   1,   0,   0,
      1,   1,   1,   1,   1,   1,   0,   2,   2,   2,   2,   2,   2,   2,   2,   2,
      2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
      2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
      2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   6, 101, 120, 112,
    111, 114, 116, 207,   8,  67,   0,   3,  97, 100, 100,   1,   3, 115, 117,  98,
      2,   3, 109, 117, 108,   3,   3, 100, 105, 118,   4,   4, 115, 113, 114, 116,
      5,   3, 109, 105, 110,   6,   3, 109,  97, 120,   7,   4,  99, 101, 105, 108,
      8,   5, 102, 108, 111, 111, 114,   9,   5, 116, 114, 117, 110,  99,  10,   7,
    110, 101,  97, 114, 101, 115, 116,  11,   3,  97,  98, 115,  12,   3, 110, 101,
    103,  13,   8,  99, 111, 112, 121, 115, 105, 103, 110,  14,  20,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95, 110,  97, 110,  95,
     48,  15,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  49,  16,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  50,  17,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  51,  18,  16,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  52,  19,  16,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  53,  20,  20,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95, 110,  97, 110,  95,
     54,  21,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  55,  22,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  56,  23,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  57,  24,  17,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  49,  48,  25,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  49,  26,  21,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95, 110,  97,
    110,  95,  49,  50,  27,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101,
    116, 117, 114, 110,  95,  49,  51,  28,  17,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  49,  52,  29,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  53,  30,  17,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  54,
     31,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,
     95,  49,  55,  32,  21,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95, 110,  97, 110,  95,  49,  56,  33,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  57,  34,  17,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  48,
     35,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,
     95,  50,  49,  36,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  50,  50,  37,  17,  36,  97, 115, 115, 101, 114, 116,  95,
    114, 101, 116, 117, 114, 110,  95,  50,  51,  38,  21,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95, 110,  97, 110,  95,  50,  52,
     39,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,
     95,  50,  53,  40,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  50,  54,  41,  17,  36,  97, 115, 115, 101, 114, 116,  95,
    114, 101, 116, 117, 114, 110,  95,  50,  55,  42,  17,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  56,  43,  17,  36,  97,
    115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  57,  44,
     17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     51,  48,  45,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117,
    114, 110,  95,  51,  49,  46,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  51,  50,  47,  17,  36,  97, 115, 115, 101, 114,
    116,  95, 114, 101, 116, 117, 114, 110,  95,  51,  51,  48,  17,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  51,  52,  49,  17,
     36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  51,
     53,  50,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  51,  54,  51,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101,
    116, 117, 114, 110,  95,  51,  55,  52,  17,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  51,  56,  53,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  51,  57,  54,  17,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  52,  48,
     55,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,
     95,  52,  49,  56,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  52,  50,  57,  17,  36,  97, 115, 115, 101, 114, 116,  95,
    114, 101, 116, 117, 114, 110,  95,  52,  51,  58,  17,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  52,  52,  59,  17,  36,  97,
    115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  52,  53,  60,
     17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     52,  54,  61,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117,
    114, 110,  95,  52,  55,  62,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  52,  56,  63,  17,  36,  97, 115, 115, 101, 114,
    116,  95, 114, 101, 116, 117, 114, 110,  95,  52,  57,  64,  17,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  53,  48,  65,  17,
     36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  53,
     49,  66,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  53,  50,   4,  99, 111, 100, 101, 254,  13,  67,   6,   0,  20,   0,
     20,   1, 137,   6,   0,  20,   0,  20,   1, 138,   6,   0,  20,   0,  20,   1,
    139,   6,   0,  20,   0,  20,   1, 140,   4,   0,  20,   0, 150,   6,   0,  20,
      0,  20,   1, 141,   6,   0,  20,   0,  20,   1, 142,   4,   0,  20,   0, 146,
      4,   0,  20,   0, 147,   4,   0,  20,   0, 148,   4,   0,  20,   0, 149,   4,
      0,  20,   0, 143,   4,   0,  20,   0, 144,   6,   0,  20,   0,  20,   1, 145,
     31,   1,   1,   4,  18,   0,   0,   0,   0,   0,   0, 240, 127,  18,   0,   0,
      0,   0,   0,   0, 240, 255,  22,   2,   0,  21,   0,  20,   0,  20,   0, 152,
     34,   0,  18, 226, 241,   0,   0,   0,   0, 240, 127,  18,   0,   0,   0,   0,
      0,   0, 240,  63,  22,   2,   0, 181,  18, 226, 241,   0,   0,   0,   0, 248,
    127, 181, 104,  34,   0,  18,   0,   0,   0,   0,   0,   0, 240,  63,  18, 226,
    241,   0,   0,   0,   0, 240, 127,  22,   2,   0, 181,  18, 226, 241,   0,   0,
      0,   0, 248, 127, 181, 104,  34,   0,  18, 226, 241,   0,   0,   0,   0, 240,
    255,  18,   0,   0,   0,   0,   0,   0, 240,  63,  22,   2,   0, 181,  18, 226,
    241,   0,   0,   0,   0, 248, 255, 181, 104,  34,   0,  18,   0,   0,   0,   0,
      0,   0, 240,  63,  18, 226, 241,   0,   0,   0,   0, 240, 255,  22,   2,   0,
    181,  18, 226, 241,   0,   0,   0,   0, 248, 255, 181, 104,  34,   0,  18, 226,
    241,   0,   0,   0,   0, 240, 127,  18, 226, 241,   0,   0,   0,   0, 240, 127,
     22,   2,   0, 181,  18, 226, 241,   0,   0,   0,   0, 248, 127, 181, 104,  31,
      1,   1,   4,  18,   0,   0,   0,   0,   0,   0, 240, 127,  18,   0,   0,   0,
      0,   0,   0, 240, 127,  22,   2,   1,  21,   0,  20,   0,  20,   0, 152,  34,
      0,  18, 226, 241,   0,   0,   0,   0, 240, 127,  18,   0,   0,   0,   0,   0,
      0, 240,  63,  22,   2,   1, 181,  18, 226, 241,   0,   0,   0,   0, 248, 127,
    181, 104,  34,   0,  18,   0,   0,   0,   0,   0,   0, 240,  63,  18, 226, 241,
      0,   0,   0,   0, 240, 127,  22,   2,   1, 181,  18, 226, 241,   0,   0,   0,
      0, 248, 127, 181, 104,  34,   0,  18, 226, 241,   0,   0,   0,   0, 240, 255,
     18,   0,   0,   0,   0,   0,   0, 240,  63,  22,   2,   1, 181,  18, 226, 241,
      0,   0,   0,   0, 248, 255, 181, 104,  34,   0,  18,   0,   0,   0,   0,   0,
      0, 240,  63,  18, 226, 241,   0,   0,   0,   0, 240, 255,  22,   2,   1, 181,
     18, 226, 241,   0,   0,   0,   0, 248, 255, 181, 104,  34,   0,  18, 226, 241,
      0,   0,   0,   0, 240, 127,  18, 226, 241,   0,   0,   0,   0, 240, 127,  22,
      2,   1, 181,  18, 226, 241,   0,   0,   0,   0, 248, 127, 181, 104,  31,   1,
      1,   4,  18,   0,   0,   0,   0,   0,   0, 240, 127,  18,   0,   0,   0,   0,
      0,   0,   0,   0,  22,   2,   2,  21,   0,  20,   0,  20,   0, 152,  34,   0,
     18, 226, 241,   0,   0,   0,   0, 240, 127,  18,   0,   0,   0,   0,   0,   0,
    240,  63,  22,   2,   2, 181,  18, 226, 241,   0,   0,   0,   0, 248, 127, 181,
    104,  34,   0,  18,   0,   0,   0,   0,   0,   0, 240,  63,  18, 226, 241,   0,
      0,   0,   0, 240, 127,  22,   2,   2, 181,  18, 226, 241,   0,   0,   0,   0,
    248, 127, 181, 104,  34,   0,  18, 226, 241,   0,   0,   0,   0, 240, 255,  18,
      0,   0,   0,   0,   0,   0, 240,  63,  22,   2,   2, 181,  18, 226, 241,   0,
      0,   0,   0, 248, 255, 181, 104,  34,   0,  18,   0,   0,   0,   0,   0,   0,
    240,  63,  18, 226, 241,   0,   0,   0,   0, 240, 255,  22,   2,   2, 181,  18,
    226, 241,   0,   0,   0,   0, 248, 255, 181, 104,  34,   0,  18, 226, 241,   0,
      0,   0,   0, 240, 127,  18, 226, 241,   0,   0,   0,   0, 240, 127,  22,   2,
      2, 181,  18, 226, 241,   0,   0,   0,   0, 248, 127, 181, 104,  31,   1,   1,
      4,  18,   0,   0,   0,   0,   0,   0,   0,   0,  18,   0,   0,   0,   0,   0,
      0,   0,   0,  22,   2,   3,  21,   0,  20,   0,  20,   0, 152,  34,   0,  18,
    226, 241,   0,   0,   0,   0, 240, 127,  18,   0,   0,   0,   0,   0,   0, 240,
     63,  22,   2,   3, 181,  18, 226, 241,   0,   0,   0,   0, 248, 127, 181, 104,
     34,   0,  18,   0,   0,   0,   0,   0,   0, 240,  63,  18, 226, 241,   0,   0,
      0,   0, 240, 127,  22,   2,   3, 181,  18, 226, 241,   0,   0,   0,   0, 248,
    127, 181, 104,  34,   0,  18, 226, 241,   0,   0,   0,   0, 240, 255,  18,   0,
      0,   0,   0,   0,   0, 240,  63,  22,   2,   3, 181,  18, 226, 241,   0,   0,
      0,   0, 248, 255, 181, 104,  34,   0,  18,   0,   0,   0,   0,   0,   0, 240,
     63,  18, 226, 241,   0,   0,   0,   0, 240, 255,  22,   2,   3, 181,  18, 226,
    241,   0,   0,   0,   0, 248, 255, 181, 104,  34,   0,  18, 226, 241,   0,   0,
      0,   0, 240, 127,  18, 226, 241,   0,   0,   0,   0, 240, 127,  22,   2,   3,
    181,  18, 226, 241,   0,   0,   0,   0, 248, 127, 181, 104,  22,   1,   1,   4,
     18,   0,   0,   0,   0,   0,   0, 240, 191,  22,   1,   4,  21,   0,  20,   0,
     20,   0, 152,  25,   0,  18, 226, 241,   0,   0,   0,   0, 240, 127,  22,   1,
      4, 181,  18, 226, 241,   0,   0,   0,   0, 248, 127, 181, 104,  25,   0,  18,
    226, 241,   0,   0,   0,   0, 240, 255,  22,   1,   4, 181,  18, 226, 241,   0,
      0,   0,   0, 248, 255, 181, 104,  34,   0,  18, 226, 241,   0,   0,   0,   0,
    240, 127,  18,   0,   0,   0,   0,   0,   0, 240,  63,  22,   2,   5, 181,  18,
    226, 241,   0,   0,   0,   0, 248, 127, 181, 104,  34,   0,  18,   0,   0,   0,
      0,   0,   0, 240,  63,  18, 226, 241,   0,   0,   0,   0, 240, 127,  22,   2,
      5, 181,  18, 226, 241,   0,   0,   0,   0, 248, 127, 181, 104,  34,   0,  18,
    226, 241,   0,   0,   0,   0, 240, 255,  18,   0,   0,   0,   0,   0,   0, 240,
     63,  22,   2,   5, 181,  18, 226, 241,   0,   0,   0,   0, 248, 255, 181, 104,
     34,   0,  18,   0,   0,   0,   0,   0,   0, 240,  63,  18, 226, 241,   0,   0,
      0,   0, 240, 255,  22,   2,   5, 181,  18, 226, 241,   0,   0,   0,   0, 248,
    255, 181, 104,  34,   0,  18, 226, 241,   0,   0,   0,   0, 240, 127,  18, 226,
    241,   0,   0,   0,   0, 240, 127,  22,   2,   5, 181,  18, 226, 241,   0,   0,
      0,   0, 248, 127, 181, 104,  34,   0,  18, 226, 241,   0,   0,   0,   0, 240,
    127,  18,   0,   0,   0,   0,   0,   0, 240,  63,  22,   2,   6, 181,  18, 226,
    241,   0,   0,   0,   0, 248, 127, 181, 104,  34,   0,  18,   0,   0,   0,   0,
      0,   0, 240,  63,  18, 226, 241,   0,   0,   0,   0, 240, 127,  22,   2,   6,
    181,  18, 226, 241,   0,   0,   0,   0, 248, 127, 181, 104,  34,   0,  18, 226,
    241,   0,   0,   0,   0, 240, 255,  18,   0,   0,   0,   0,   0,   0, 240,  63,
     22,   2,   6, 181,  18, 226, 241,   0,   0,   0,   0, 248, 255, 181, 104,  34,
      0,  18,   0,   0,   0,   0,   0,   0, 240,  63,  18, 226, 241,   0,   0,   0,
      0, 240, 255,  22,   2,   6, 181,  18, 226, 241,   0,   0,   0,   0, 248, 255,
    181, 104,  34,   0,  18, 226, 241,   0,   0,   0,   0, 240, 127,  18, 226, 241,
      0,   0,   0,   0, 240, 127,  22,   2,   6, 181,  18, 226, 241,   0,   0,   0,
      0, 248, 127, 181, 104,  25,   0,  18, 226, 241,   0,   0,   0,   0, 240, 127,
     22,   1,   7, 181,  18, 226, 241,   0,   0,   0,   0, 248, 127, 181, 104,  25,
      0,  18, 226, 241,   0,   0,   0,   0, 240, 255,  22,   1,   7, 181,  18, 226,
    241,   0,   0,   0,   0, 248, 255, 181, 104,  25,   0,  18, 226, 241,   0,   0,
      0,   0, 240, 127,  22,   1,   8, 181,  18, 226, 241,   0,   0,   0,   0, 248,
    127, 181, 104,  25,   0,  18, 226, 241,   0,   0,   0,   0, 240, 255,  22,   1,
      8, 181,  18, 226, 241,   0,   0,   0,   0, 248, 255, 181, 104,  25,   0,  18,
    226, 241,   0,   0,   0,   0, 240, 127,  22,   1,   9, 181,  18, 226, 241,   0,
      0,   0,   0, 248, 127, 181, 104,  25,   0,  18, 226, 241,   0,   0,   0,   0,
    240, 255,  22,   1,   9, 181,  18, 226, 241,   0,   0,   0,   0, 248, 255, 181,
    104,  25,   0,  18, 226, 241,   0,   0,   0,   0, 240, 127,  22,   1,  10, 181,
     18, 226, 241,   0,   0,   0,   0, 248, 127, 181, 104,  25,   0,  18, 226, 241,
      0,   0,   0,   0, 240, 255,  22,   1,  10, 181,  18, 226, 241,   0,   0,   0,
      0, 248, 255, 181, 104,  25,   0,  18, 226, 241,   0,   0,   0,   0, 240, 127,
     22,   1,  11, 181,  18, 226, 241,   0,   0,   0,   0, 240, 127, 181, 104,  25,
      0,  18, 226, 241,   0,   0,   0,   0, 240, 255,  22,   1,  11, 181,  18, 226,
    241,   0,   0,   0,   0, 240, 127, 181, 104,  25,   0,  18, 226, 241,   0,   0,
      0,   0, 240, 127,  22,   1,  12, 181,  18, 226, 241,   0,   0,   0,   0, 240,
    255, 181, 104,  25,   0,  18, 226, 241,   0,   0,   0,   0, 240, 255,  22,   1,
     12, 181,  18, 226, 241,   0,   0,   0,   0, 240, 127, 181, 104,  34,   0,  18,
    226, 241,   0,   0,   0,   0, 240, 127,  18,   0,   0,   0,   0,   0,   0, 240,
     63,  22,   2,  13, 181,  18, 226, 241,   0,   0,   0,   0, 240, 127, 181, 104,
     34,   0,  18, 226, 241,   0,   0,   0,   0, 240, 127,  18,   0,   0,   0,   0,
      0,   0, 240, 191,  22,   2,  13, 181,  18, 226, 241,   0,   0,   0,   0, 240,
    255, 181, 104,  34,   0,  18, 226, 241,   0,   0,   0,   0, 240, 255,  18,   0,
      0,   0,   0,   0,   0, 240,  63,  22,   2,  13, 181,  18, 226, 241,   0,   0,
      0,   0, 240, 127, 181, 104,  34,   0,  18, 226, 241,   0,   0,   0,   0, 240,
    255,  18,   0,   0,   0,   0,   0,   0, 240, 191,  22,   2,  13, 181,  18, 226,
    241,   0,   0,   0,   0, 240, 255, 181, 104,
  ]);

  assertReturn(module, '$assert_return_nan_0', 'external/testsuite/nan-propagation.wast', 134);
  assertReturn(module, '$assert_return_1', 'external/testsuite/nan-propagation.wast', 135);
  assertReturn(module, '$assert_return_2', 'external/testsuite/nan-propagation.wast', 136);
  assertReturn(module, '$assert_return_3', 'external/testsuite/nan-propagation.wast', 137);
  assertReturn(module, '$assert_return_4', 'external/testsuite/nan-propagation.wast', 138);
  assertReturn(module, '$assert_return_5', 'external/testsuite/nan-propagation.wast', 139);
  assertReturn(module, '$assert_return_nan_6', 'external/testsuite/nan-propagation.wast', 141);
  assertReturn(module, '$assert_return_7', 'external/testsuite/nan-propagation.wast', 142);
  assertReturn(module, '$assert_return_8', 'external/testsuite/nan-propagation.wast', 143);
  assertReturn(module, '$assert_return_9', 'external/testsuite/nan-propagation.wast', 144);
  assertReturn(module, '$assert_return_10', 'external/testsuite/nan-propagation.wast', 145);
  assertReturn(module, '$assert_return_11', 'external/testsuite/nan-propagation.wast', 146);
  assertReturn(module, '$assert_return_nan_12', 'external/testsuite/nan-propagation.wast', 148);
  assertReturn(module, '$assert_return_13', 'external/testsuite/nan-propagation.wast', 149);
  assertReturn(module, '$assert_return_14', 'external/testsuite/nan-propagation.wast', 150);
  assertReturn(module, '$assert_return_15', 'external/testsuite/nan-propagation.wast', 151);
  assertReturn(module, '$assert_return_16', 'external/testsuite/nan-propagation.wast', 152);
  assertReturn(module, '$assert_return_17', 'external/testsuite/nan-propagation.wast', 153);
  assertReturn(module, '$assert_return_nan_18', 'external/testsuite/nan-propagation.wast', 155);
  assertReturn(module, '$assert_return_19', 'external/testsuite/nan-propagation.wast', 156);
  assertReturn(module, '$assert_return_20', 'external/testsuite/nan-propagation.wast', 157);
  assertReturn(module, '$assert_return_21', 'external/testsuite/nan-propagation.wast', 158);
  assertReturn(module, '$assert_return_22', 'external/testsuite/nan-propagation.wast', 159);
  assertReturn(module, '$assert_return_23', 'external/testsuite/nan-propagation.wast', 160);
  assertReturn(module, '$assert_return_nan_24', 'external/testsuite/nan-propagation.wast', 162);
  assertReturn(module, '$assert_return_25', 'external/testsuite/nan-propagation.wast', 163);
  assertReturn(module, '$assert_return_26', 'external/testsuite/nan-propagation.wast', 164);
  assertReturn(module, '$assert_return_27', 'external/testsuite/nan-propagation.wast', 166);
  assertReturn(module, '$assert_return_28', 'external/testsuite/nan-propagation.wast', 167);
  assertReturn(module, '$assert_return_29', 'external/testsuite/nan-propagation.wast', 168);
  assertReturn(module, '$assert_return_30', 'external/testsuite/nan-propagation.wast', 169);
  assertReturn(module, '$assert_return_31', 'external/testsuite/nan-propagation.wast', 170);
  assertReturn(module, '$assert_return_32', 'external/testsuite/nan-propagation.wast', 172);
  assertReturn(module, '$assert_return_33', 'external/testsuite/nan-propagation.wast', 173);
  assertReturn(module, '$assert_return_34', 'external/testsuite/nan-propagation.wast', 174);
  assertReturn(module, '$assert_return_35', 'external/testsuite/nan-propagation.wast', 175);
  assertReturn(module, '$assert_return_36', 'external/testsuite/nan-propagation.wast', 176);
  assertReturn(module, '$assert_return_37', 'external/testsuite/nan-propagation.wast', 178);
  assertReturn(module, '$assert_return_38', 'external/testsuite/nan-propagation.wast', 179);
  assertReturn(module, '$assert_return_39', 'external/testsuite/nan-propagation.wast', 181);
  assertReturn(module, '$assert_return_40', 'external/testsuite/nan-propagation.wast', 182);
  assertReturn(module, '$assert_return_41', 'external/testsuite/nan-propagation.wast', 184);
  assertReturn(module, '$assert_return_42', 'external/testsuite/nan-propagation.wast', 185);
  assertReturn(module, '$assert_return_43', 'external/testsuite/nan-propagation.wast', 187);
  assertReturn(module, '$assert_return_44', 'external/testsuite/nan-propagation.wast', 188);
  assertReturn(module, '$assert_return_45', 'external/testsuite/nan-propagation.wast', 190);
  assertReturn(module, '$assert_return_46', 'external/testsuite/nan-propagation.wast', 191);
  assertReturn(module, '$assert_return_47', 'external/testsuite/nan-propagation.wast', 193);
  assertReturn(module, '$assert_return_48', 'external/testsuite/nan-propagation.wast', 194);
  assertReturn(module, '$assert_return_49', 'external/testsuite/nan-propagation.wast', 196);
  assertReturn(module, '$assert_return_50', 'external/testsuite/nan-propagation.wast', 197);
  assertReturn(module, '$assert_return_51', 'external/testsuite/nan-propagation.wast', 198);
  assertReturn(module, '$assert_return_52', 'external/testsuite/nan-propagation.wast', 199);
}

function testModule2() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,  25,   5,  64,
      1,   3,   1,   4,  64,   1,   4,   1,   3,  64,   1,   1,   1,   3,  64,   1,
      2,   1,   4,  64,   0,   1,   1,   8, 102, 117, 110,  99, 116, 105, 111, 110,
      9,   8,   0,   1,   2,   3,   4,   4,   4,   4,   6, 101, 120, 112, 111, 114,
    116, 148,   1,   8,   0,  15, 102,  54,  52,  46, 112, 114, 111, 109, 111, 116,
    101,  95, 102,  51,  50,   1,  14, 102,  51,  50,  46, 100, 101, 109, 111, 116,
    101,  95, 102,  54,  52,   2,  19, 102,  51,  50,  46, 114, 101, 105, 110, 116,
    101, 114, 112, 114, 101, 116,  95, 105,  51,  50,   3,  19, 102,  54,  52,  46,
    114, 101, 105, 110, 116, 101, 114, 112, 114, 101, 116,  95, 105,  54,  52,   4,
     16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     48,   5,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  49,   6,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  50,   7,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  51,   4,  99, 111, 100, 101, 112,   8,   4,   0,
     20,   0, 178,   4,   0,  20,   0, 172,   4,   0,  20,   0, 173,   4,   0,  20,
      0, 179,  21,   0,  19, 226, 241, 128, 127,  22,   1,   0, 181,  18,   0,   0,
      0,  64,  60,  30, 248, 127, 181, 104,  21,   0,  18, 226, 241, 226, 241, 226,
    241, 240, 127,  22,   1,   1, 180,  19,  23, 143, 199, 127, 180,  77,  18,   0,
     16, 195, 202, 157, 252,   7,  22,   1,   2, 180,  19,  67, 101, 135, 127, 180,
     77,  27,   0,  17, 188, 181, 226, 179, 197, 198, 132, 248, 255,   0,  22,   1,
      3, 181,  18, 188, 154, 120,  86,  52,  18, 240, 127, 181, 104,
  ]);

  assertReturn(module, '$assert_return_0', 'external/testsuite/nan-propagation.wast', 215);
  assertReturn(module, '$assert_return_1', 'external/testsuite/nan-propagation.wast', 217);
  assertReturn(module, '$assert_return_2', 'external/testsuite/nan-propagation.wast', 219);
  assertReturn(module, '$assert_return_3', 'external/testsuite/nan-propagation.wast', 221);
}

function createModule(data) {
  var u8a = new Uint8Array(data);
  var ffi = {spectest: {print: print}};
  return Wasm.instantiateModule(u8a, ffi);
}

function assertReturn(module, name, file, line) {
  try {
    var result = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (result == 1) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed.");
    failed++;
  }
}

function assertTrap(module, name, file, line) {
  var threw = false;
  try {
    module.exports[name]();
  } catch (e) {
    threw = true;
  }

  if (threw) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed, didn't throw");
    failed++;
  }
}

function invoke(module, name) {
  try {
    var invokeResult = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (!quiet)
    print(name + " = " + invokeResult);
}

function end() {
  if ((failed > 0) || !quiet)
    print(passed + "/" + (passed + failed) + " tests passed.");
}
