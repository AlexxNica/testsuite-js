'use strict';

let spectest = {
  print: print || ((...xs) => console.log(...xs)),
  global: 666,
  table: new WebAssembly.Table({initial: 10, maximum: 20, element: 'anyfunc'}),  memory: new WebAssembly.Memory({initial: 1, maximum: 2}),};

let registry = {spectest};
let $$;

function register(name, instance) {
  registry[name] = instance.exports;
}

function module(bytes) {
  let buffer = new ArrayBuffer(bytes.length);
  let view = new Uint8Array(buffer);
  for (let i = 0; i < bytes.length; ++i) {
    view[i] = bytes.charCodeAt(i);
  }
  return new WebAssembly.Module(buffer);
}

function instance(bytes, imports = registry) {
  return new WebAssembly.Instance(module(bytes), imports);
}

function assert_malformed(bytes) {
  try { module(bytes) } catch (e) { return }
  throw new Error("Wasm decoding failure expected");
}

function assert_invalid(bytes) {
  try { module(bytes) } catch (e) { return }
  throw new Error("Wasm validation failure expected");
}

function assert_unlinkable(bytes) {
  let mod = module(bytes);
  try { new WebAssembly.Instance(mod, registry) } catch (e) { return }
  throw new Error("Wasm linking failure expected");
}

function assert_trap(action) {
  try { action() } catch (e) { return }
  throw new Error("Wasm trap expected");
}

function assert_return(action, expected) {
  let actual = action();
  if (actual !== expected) {
    throw new Error("Wasm return value " + expected + " expected, got " + actual);
  };
}

function assert_return_nan(action) {
  let actual = action();
  if (!Number.isNaN(actual)) {
    throw new Error("Wasm return value NaN expected, got " + actual);
  };
}

$$ = instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x40\x00\x01\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x66\x6f\x6f\x00\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x10\x00\x0f");
assert_return(() => $$.exports["foo"](), 0);
$$ = instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x40\x00\x01\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x66\x6f\x6f\x00\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x10\x01\x0f");
assert_return(() => $$.exports["foo"](), 1);
$$ = instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x40\x00\x01\x03\x03\x8d\x80\x80\x80\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xec\x80\x80\x80\x00\x0c\x00\x00\x00\x01\x30\x00\x01\x01\x5f\x00\x02\x01\x24\x00\x03\x01\x40\x00\x04\x21\x7e\x21\x40\x23\x24\x25\x5e\x26\x2a\x28\x29\x5f\x2b\x60\x2d\x3d\x7b\x7d\x7c\x5b\x5d\x5c\x3a\x22\x3b\x27\x3c\x3e\x3f\x2c\x2e\x2f\x20\x00\x05\x03\x4e\x61\x4e\x00\x06\x08\x49\x6e\x66\x69\x6e\x69\x74\x79\x00\x07\x02\x69\x66\x00\x08\x06\x6d\x61\x6c\x6c\x6f\x63\x00\x09\x07\x5f\x6d\x61\x6c\x6c\x6f\x63\x00\x0a\x08\x5f\x5f\x6d\x61\x6c\x6c\x6f\x63\x00\x0b\x0a\x91\x81\x80\x80\x00\x0c\x87\x80\x80\x80\x00\x00\x13\x00\x80\xc8\x40\x0f\x87\x80\x80\x80\x00\x00\x13\x00\x80\xcb\x40\x0f\x87\x80\x80\x80\x00\x00\x13\x00\x00\xcc\x40\x0f\x87\x80\x80\x80\x00\x00\x13\x00\x80\xcc\x40\x0f\x87\x80\x80\x80\x00\x00\x13\x00\x00\x00\x41\x0f\x87\x80\x80\x80\x00\x00\x13\x00\x00\xcb\x40\x0f\x87\x80\x80\x80\x00\x00\x13\x00\x40\x00\x41\x0f\x87\x80\x80\x80\x00\x00\x13\x00\x80\x00\x41\x0f\x87\x80\x80\x80\x00\x00\x13\x00\xc0\x00\x41\x0f\x87\x80\x80\x80\x00\x00\x13\x00\x00\xc9\x40\x0f\x87\x80\x80\x80\x00\x00\x13\x00\x80\xc9\x40\x0f\x87\x80\x80\x80\x00\x00\x13\x00\x00\xca\x40\x0f");
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\x87\x80\x80\x80\x00\x01\x02\x24\x24\x00\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\x80\xc8\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports[""](), 6.265625)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\x8d\x80\x80\x80\x00\x01\x02\x24\x24\x06\x6d\x61\x6c\x6c\x6f\x63\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\x00\xc9\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["malloc"](), 6.28125)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\x8e\x80\x80\x80\x00\x01\x02\x24\x24\x07\x5f\x6d\x61\x6c\x6c\x6f\x63\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\x80\xc9\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["_malloc"](), 6.296875)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x24\x08\x5f\x5f\x6d\x61\x6c\x6c\x6f\x63\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\x00\xca\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["__malloc"](), 6.3125)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\xa8\x80\x80\x80\x00\x01\x02\x24\x24\x21\x7e\x21\x40\x23\x24\x25\x5e\x26\x2a\x28\x29\x5f\x2b\x60\x2d\x3d\x7b\x7d\x7c\x5b\x5d\x5c\x3a\x22\x3b\x27\x3c\x3e\x3f\x2c\x2e\x2f\x20\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\x00\xcb\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["~!@#$%^&*()_+`-={}|[]\\:\";'<>?,./ "](), 6.34375)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\x88\x80\x80\x80\x00\x01\x02\x24\x24\x01\x30\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\x80\xcb\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["0"](), 6.359375)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\x88\x80\x80\x80\x00\x01\x02\x24\x24\x01\x5f\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\x00\xcc\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["_"](), 6.375)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\x88\x80\x80\x80\x00\x01\x02\x24\x24\x01\x24\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\x80\xcc\x40\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["$"](), 6.390625)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\x88\x80\x80\x80\x00\x01\x02\x24\x24\x01\x40\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\x00\x00\x41\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["@"](), 8.)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\x8a\x80\x80\x80\x00\x01\x02\x24\x24\x03\x4e\x61\x4e\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\x40\x00\x41\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["NaN"](), 8.015625)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x24\x08\x49\x6e\x66\x69\x6e\x69\x74\x79\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\x80\x00\x41\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["Infinity"](), 8.03125)
instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x40\x00\x00\x40\x00\x01\x03\x02\x89\x80\x80\x80\x00\x01\x02\x24\x24\x02\x69\x66\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x01\x00\x16\x00\x13\x00\xc0\x00\x41\x83\x5a\x07\x00\x09\x0f\x00\x0f", {$$: $$.exports}).exports.run();  // assert_return(() => $$.exports["if"](), 8.046875)
$$ = instance("\x00\x61\x73\x6d\x0c\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x40\x01\x01\x00\x40\x02\x01\x01\x00\x02\xa3\x80\x80\x80\x00\x02\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x70\x72\x69\x6e\x74\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x70\x72\x69\x6e\x74\x00\x00\x03\x82\x80\x80\x80\x00\x01\x01\x07\x8b\x80\x80\x80\x00\x01\x07\x70\x72\x69\x6e\x74\x33\x32\x00\x02\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x14\x00\x16\x00\x14\x01\x16\x01\x0f");
$$.exports["print32"](42, 123);
