var passed = 0;
var failed = 0;
var quiet = false;

testModule0();
testModule1();
testModule2();
testModule3();
testModule4();
testModule5();
testModule6();
testModule7();
testModule8();
testModule9();
testModule10();
testModule11();
testModule12();
end();

function testModule0() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   6, 109, 101, 109, 111, 114, 121,   3,
      0,   0,   0,
  ]);

}

function testModule1() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   6, 109, 101, 109, 111, 114, 121,   3,
      0,   1,   0,
  ]);

}

function testModule2() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   6, 109, 101, 109, 111, 114, 121,   4,
      1, 128,   2,   0,
  ]);

}

function testModule3() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   6, 109, 101, 109, 111, 114, 121,   5,
      0, 255, 255,   3,   0,
  ]);

}

function testModule4() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   6, 109, 101, 109, 111, 114, 121,   3,
      0,   0,   0,   4, 100,  97, 116,  97,   3,   1,   0,   0,
  ]);

}

function testModule5() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   6, 109, 101, 109, 111, 114, 121,   3,
      1,   1,   0,   4, 100,  97, 116,  97,   4,   1,   0,   1,  97,
  ]);

}

function testModule6() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   6, 109, 101, 109, 111, 114, 121,   3,
      1,   2,   0,   4, 100,  97, 116,  97,   9,   2,   0,   1,  97, 255, 255,   3,
      1,  98,
  ]);

}

function testModule7() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   6, 109, 101, 109, 111, 114, 121,   3,
      1,   2,   0,   4, 100,  97, 116,  97,  10,   3,   0,   1,  97,   1,   1,  98,
      2,   1,  99,
  ]);

}

function testModule8() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,   4,   1,  64,
      0,   0,   8, 102, 117, 110,  99, 116, 105, 111, 110,   2,   1,   0,   6, 109,
    101, 109, 111, 114, 121,   3,   0,   0,   0,   4,  99, 111, 100, 101,   8,   1,
      6,   0,  16,   0,  33,   1,   0,
  ]);

}

function testModule9() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,   4,   1,  64,
      0,   0,   8, 102, 117, 110,  99, 116, 105, 111, 110,   2,   1,   0,   6, 109,
    101, 109, 111, 114, 121,   3,   0,   0,   0,   4,  99, 111, 100, 101,   8,   1,
      6,   0,  16,   0,  35,   2,   0,
  ]);

}

function testModule10() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,   4,   1,  64,
      0,   0,   8, 102, 117, 110,  99, 116, 105, 111, 110,   2,   1,   0,   6, 109,
    101, 109, 111, 114, 121,   3,   0,   0,   0,   4,  99, 111, 100, 101,   8,   1,
      6,   0,  16,   0,  42,   3,   0,
  ]);

}

function testModule11() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,   4,   1,  64,
      0,   0,   8, 102, 117, 110,  99, 116, 105, 111, 110,   2,   1,   0,   6, 109,
    101, 109, 111, 114, 121,   3,   0,   0,   0,   4,  99, 111, 100, 101,   8,   1,
      6,   0,  16,   0,  44,   3,   0,
  ]);

}

function testModule12() {
  var module = createModule([
      0,  97, 115, 109,  11,   0,   0,   0,   4, 116, 121, 112, 101,  19,   4,  64,
      0,   1,   1,  64,   0,   1,   4,  64,   1,   1,   1,   1,  64,   1,   2,   1,
      2,   8, 102, 117, 110,  99, 116, 105, 111, 110,  39,  38,   0,   0,   0,   1,
      2,   2,   2,   2,   3,   3,   3,   3,   3,   3,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   6, 109, 101, 109, 111, 114, 121,   3,   1,   1,   0,   6, 101, 120,
    112, 111, 114, 116, 231,   4,  38,   0,   4, 100,  97, 116,  97,   1,   7,  97,
    108, 105, 103, 110, 101, 100,   2,   9, 117, 110,  97, 108, 105, 103, 110, 101,
    100,   3,   4,  99,  97, 115, 116,   4,  11, 105,  51,  50,  95, 108, 111,  97,
    100,  56,  95, 115,   5,  11, 105,  51,  50,  95, 108, 111,  97, 100,  56,  95,
    117,   6,  12, 105,  51,  50,  95, 108, 111,  97, 100,  49,  54,  95, 115,   7,
     12, 105,  51,  50,  95, 108, 111,  97, 100,  49,  54,  95, 117,   8,  11, 105,
     54,  52,  95, 108, 111,  97, 100,  56,  95, 115,   9,  11, 105,  54,  52,  95,
    108, 111,  97, 100,  56,  95, 117,  10,  12, 105,  54,  52,  95, 108, 111,  97,
    100,  49,  54,  95, 115,  11,  12, 105,  54,  52,  95, 108, 111,  97, 100,  49,
     54,  95, 117,  12,  12, 105,  54,  52,  95, 108, 111,  97, 100,  51,  50,  95,
    115,  13,  12, 105,  54,  52,  95, 108, 111,  97, 100,  51,  50,  95, 117,  14,
     16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     48,  15,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  49,  16,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  50,  17,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  51,  18,  16,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  52,  19,  16,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  53,  20,  16,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  54,  21,  16,  36,
     97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  55,  22,
     16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     56,  23,  16,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  57,  24,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116,
    117, 114, 110,  95,  49,  48,  25,  17,  36,  97, 115, 115, 101, 114, 116,  95,
    114, 101, 116, 117, 114, 110,  95,  49,  49,  26,  17,  36,  97, 115, 115, 101,
    114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  50,  27,  17,  36,  97,
    115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  51,  28,
     17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,
     49,  52,  29,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117,
    114, 110,  95,  49,  53,  30,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114,
    101, 116, 117, 114, 110,  95,  49,  54,  31,  17,  36,  97, 115, 115, 101, 114,
    116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  55,  32,  17,  36,  97, 115,
    115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,  56,  33,  17,
     36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  49,
     57,  34,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101, 116, 117, 114,
    110,  95,  50,  48,  35,  17,  36,  97, 115, 115, 101, 114, 116,  95, 114, 101,
    116, 117, 114, 110,  95,  50,  49,  36,  17,  36,  97, 115, 115, 101, 114, 116,
     95, 114, 101, 116, 117, 114, 110,  95,  50,  50,  37,  17,  36,  97, 115, 115,
    101, 114, 116,  95, 114, 101, 116, 117, 114, 110,  95,  50,  51,   4,  99, 111,
    100, 101, 174,   5,  38,  77,   0,  16,   0,  33,   0,   0,  16, 193,   0,  77,
     16,   3,  33,   0,   0,  16, 167,   1,  77,  71,  16,   6,  33,   0,   0,  16,
      0,  77,  16,  19,  33,   0,   0,  16,   0,  77,  71,  71,  16,  20,  33,   0,
      0,  16, 215,   0,  77,  16,  23,  33,   0,   0,  16, 205,   0,  77,  71,  16,
     24,  33,   0,   0,  16,   0,  77,  16, 255,   7,  33,   0,   0,  16,   0,  77,
     71,  71,  71,  63,   1,   3,   1,  16,  10,  21,   0,   2,  20,   0,  16,   0,
     77,   3,   6,   0,   2,  15,  20,   0,  16,   4,  66,  21,   2,  20,   2,  20,
      0,  51,   2,   0,  20,   2,  42,   2,   0,  21,   1,  20,   0,  20,   1,  78,
      3,  16,   0,   9,   1,  15,  20,   0,  16,   1,  65,  21,   0,   6,   0,   0,
     15,  16,   1,  63,   2,   1,   1,   2,   4,  16,  10,  21,   0,   2,  20,   0,
     16,   0,  77,   3,   6,   0,   2,  15,  20,   0, 174,  21,   2,  20,   0,  20,
      2,  54,   0,   0,  20,   0,  45,   0,   0,  21,   1,  20,   2,  20,   1, 152,
      3,  16,   0,   9,   1,  15,  20,   0,  16,   1,  65,  21,   0,   6,   0,   0,
     15,  16,   1,  55,   0,  16,   8,  17, 199, 159, 127,  52,   3,   0,  16,   8,
     45,   3,   0,  17, 199, 159, 127, 179, 151,   3,  18,   0,   0,   0,   0,   0,
      0,   0,   0,   9,   1,  15,  16,   9,  17,   0,  52,   0,   0,  16,  15,  16,
    197, 128,   1,  47,   0,   0,  16,   9,  45,   0,   0,  13,   0,  16,   8,  20,
      0,  46,   0,   0,  16,   8,  32,   0,   0,  13,   0,  16,   8,  20,   0,  46,
      0,   0,  16,   8,  33,   0,   0,  13,   0,  16,   8,  20,   0,  47,   1,   0,
     16,   8,  34,   1,   0,  13,   0,  16,   8,  20,   0,  47,   1,   0,  16,   8,
     35,   1,   0,  13,   0,  16,   8,  20,   0,  48,   0,   0,  16,   8,  36,   0,
      0,  13,   0,  16,   8,  20,   0,  48,   0,   0,  16,   8,  37,   0,   0,  13,
      0,  16,   8,  20,   0,  49,   1,   0,  16,   8,  38,   1,   0,  13,   0,  16,
      8,  20,   0,  49,   1,   0,  16,   8,  39,   1,   0,  13,   0,  16,   8,  20,
      0,  50,   2,   0,  16,   8,  40,   2,   0,  13,   0,  16,   8,  20,   0,  50,
      2,   0,  16,   8,  41,   2,   0,   7,   0,  22,   0,   0,  16,   1,  77,   7,
      0,  22,   0,   1,  16,   1,  77,   7,   0,  22,   0,   2,  16,   1,  77,  16,
      0,  22,   0,   3, 181,  18,   0,   0,   0,   0,   0,   0,  69,  64, 181, 104,
      9,   0,  16, 127,  22,   1,   4,  16, 127,  77,  10,   0,  16, 127,  22,   1,
      5,  16, 255,   1,  77,   9,   0,  16, 127,  22,   1,   6,  16, 127,  77,  11,
      0,  16, 127,  22,   1,   7,  16, 255, 255,   3,  77,  11,   0,  16, 228,   0,
     22,   1,   4,  16, 228,   0,  77,  11,   0,  16, 200,   1,  22,   1,   5,  16,
    200,   1,  77,  13,   0,  16, 160, 156,   1,  22,   1,   6,  16, 160, 156,   1,
     77,  13,   0,  16, 192, 184,   2,  22,   1,   7,  16, 192, 184,   2,  77,   9,
      0,  17, 127,  22,   1,   8,  17, 127, 104,  10,   0,  17, 127,  22,   1,   9,
     17, 255,   1, 104,   9,   0,  17, 127,  22,   1,  10,  17, 127, 104,  11,   0,
     17, 127,  22,   1,  11,  17, 255, 255,   3, 104,   9,   0,  17, 127,  22,   1,
     12,  17, 127, 104,  13,   0,  17, 127,  22,   1,  13,  17, 255, 255, 255, 255,
     15, 104,  11,   0,  17, 228,   0,  22,   1,   8,  17, 228,   0, 104,  11,   0,
     17, 200,   1,  22,   1,   9,  17, 200,   1, 104,  13,   0,  17, 160, 156,   1,
     22,   1,  10,  17, 160, 156,   1, 104,  13,   0,  17, 192, 184,   2,  22,   1,
     11,  17, 192, 184,   2, 104,  13,   0,  17, 160, 156,   1,  22,   1,  12,  17,
    160, 156,   1, 104,  13,   0,  17, 192, 184,   2,  22,   1,  13,  17, 192, 184,
      2, 104,   4, 100,  97, 116,  97,  14,   2,   0,   5,  65,  66,  67, 167,  68,
     20,   4,  87,  65,  83,  77,
  ]);

  assertReturn(module, '$assert_return_0', 'external/testsuite/memory.wast', 221);
  assertReturn(module, '$assert_return_1', 'external/testsuite/memory.wast', 222);
  assertReturn(module, '$assert_return_2', 'external/testsuite/memory.wast', 223);
  assertReturn(module, '$assert_return_3', 'external/testsuite/memory.wast', 224);
  assertReturn(module, '$assert_return_4', 'external/testsuite/memory.wast', 226);
  assertReturn(module, '$assert_return_5', 'external/testsuite/memory.wast', 227);
  assertReturn(module, '$assert_return_6', 'external/testsuite/memory.wast', 228);
  assertReturn(module, '$assert_return_7', 'external/testsuite/memory.wast', 229);
  assertReturn(module, '$assert_return_8', 'external/testsuite/memory.wast', 231);
  assertReturn(module, '$assert_return_9', 'external/testsuite/memory.wast', 232);
  assertReturn(module, '$assert_return_10', 'external/testsuite/memory.wast', 233);
  assertReturn(module, '$assert_return_11', 'external/testsuite/memory.wast', 234);
  assertReturn(module, '$assert_return_12', 'external/testsuite/memory.wast', 236);
  assertReturn(module, '$assert_return_13', 'external/testsuite/memory.wast', 237);
  assertReturn(module, '$assert_return_14', 'external/testsuite/memory.wast', 238);
  assertReturn(module, '$assert_return_15', 'external/testsuite/memory.wast', 239);
  assertReturn(module, '$assert_return_16', 'external/testsuite/memory.wast', 240);
  assertReturn(module, '$assert_return_17', 'external/testsuite/memory.wast', 241);
  assertReturn(module, '$assert_return_18', 'external/testsuite/memory.wast', 243);
  assertReturn(module, '$assert_return_19', 'external/testsuite/memory.wast', 244);
  assertReturn(module, '$assert_return_20', 'external/testsuite/memory.wast', 245);
  assertReturn(module, '$assert_return_21', 'external/testsuite/memory.wast', 246);
  assertReturn(module, '$assert_return_22', 'external/testsuite/memory.wast', 247);
  assertReturn(module, '$assert_return_23', 'external/testsuite/memory.wast', 248);
}

function createModule(data) {
  var u8a = new Uint8Array(data);
  var ffi = {spectest: {print: print}};
  return Wasm.instantiateModule(u8a, ffi);
}

function assertReturn(module, name, file, line) {
  try {
    var result = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (result == 1) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed.");
    failed++;
  }
}

function assertTrap(module, name, file, line) {
  var threw = false;
  try {
    module.exports[name]();
  } catch (e) {
    threw = true;
  }

  if (threw) {
    passed++;
  } else {
    print(file + ":" + line + ": " + name + " failed, didn't throw");
    failed++;
  }
}

function invoke(module, name) {
  try {
    var invokeResult = module.exports[name]();
  } catch(e) {
    print(file + ":" + line + ": " + name + " unexpectedly threw: " + e);
  }

  if (!quiet)
    print(name + " = " + invokeResult);
}

function end() {
  if ((failed > 0) || !quiet)
    print(passed + "/" + (passed + failed) + " tests passed.");
}
